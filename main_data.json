{
    "version_name": "1.0",

    "blogs": [
        {
            "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/BlogPictures/github.png",
            "link": "https://github.com/"
        },
        {
            "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/BlogPictures/stackoverflow.png",
            "link": "https://stackoverflow.com/"
        },
        {
            "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/BlogPictures/codewars.png",
            "link": "https://www.codewars.com/"
        }  
    ],
    "contents": [
        {
            "name": "Mobil Geliştiriciliği",
            "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/mobilephone.png"
        },
        {
            "name": "Oyun Geliştiriciliği",
            "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/game.png"
        },
        {
            "name": "Web Geliştiriciliği",
            "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/web.png"
        },
        {
            "name": "Yapay Zeka Geliştiriciliği",
            "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/ai.png"
        },
        {
            "name": "Siber Güvenlik",
            "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/cybersecurity.png"
        },
        {
            "name": "Veri Bilimi",
            "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/data_science.png"
        }
    ],
    "events": [
        {
            "name": "Talents in Action – Technology Summer Camp",
            "info": "Kariyerine PiA Group'ta başlamaya ne dersin?",
            "application_deadline": "Son Başvuru: 20 Mayıs",
            "link": "https://coderspace.io/etkinlikler/talents-in-action/",
            "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/event_pictures/1.png"
        },
        {
            "name": "Intellicamp Data Summer Camp",
            "info": "Intellica Yaz Kampı",
            "application_deadline": "Son Başvuru: 20 Mayıs",
            "link": "https://coderspace.io/etkinlikler/intellica-data-summer-camp/",
            "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/event_pictures/2.png"
        },
        {
            "name": "BtcTurk | Teknoloji Senior Developer Hiring Day",
            "info": "BtcTurk'te inovatif ve heyecan verici bir çalışma ortamı seni bekliyor!",
            "application_deadline": "Son Başvuru: 23 Mayıs",
            "link": "https://coderspace.io/etkinlikler/btcturk-hiring-day/",
            "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/event_pictures/3.png"
        },
        {
            "name": "Agile Development Day - 2024",
            "info": "Agile Development'ı Uzmanlarından Dinleme Fırsatı Seni Bekliyor!",
            "application_deadline": "Son Başvuru: 28 Mayıs",
            "link": "https://coderspace.io/etkinlikler/agile-development-day-2024/",
            "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/event_pictures/4.png"
        },
        {
            "name": "Architecht TechTalent 2024",
            "info": "Kariyerine anlamlı bir başlangıç yapmak istiyorsan, doğru yerdesin!",
            "application_deadline": "Son Başvuru: 30 Mayıs",
            "link": "https://coderspace.io/etkinlikler/architecht-techtalent-2024/",
            "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/event_pictures/5.png"
        },
        {
            "name": "Softtech Yetenek Kuşağı 2024",
            "info": "Kariyer yolculuğuna Softtech'le başla, genç yeteneklere özel Yetenek Kuşağı'nı keşfet!",
            "application_deadline": "Son Başvuru: 31 Mayıs",
            "link": "https://coderspace.io/etkinlikler/softtech-yetenek-kusagi-2024/",
            "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/event_pictures/6.png"
        }
    ],
    "mobile": {
        "languages": [
            {
                "name": "Kotlin & Java",
                "info": "JetBrains şirketi tarafından statik olarak yazılmış, modern bir programlama olan Kotlin, Google tarafından 2017 yılında resmi olarak kabul edilmiştir. Java ile tamamen uyumlu çalışacak şekilde tasarlanmıştır. Java’dan daha iyi kod yazabilen ve güvenliği sorunsuz olan bir programlama dili tasarlamak isteyen mühendisler, Kotlin’i tasarlamıştır. ",
                "advantage": "<p><strong>Java ile Uyumlu:</strong> Kotlin, Java ile uyumlu bir dil olduğu için mevcut Java projelerine sorunsuz entegre edilebilir. Ayrıca, Kotlin ile yazılan ve Java ile yazılan kodları bir arada kullanabilirsiniz.</p> \n\n<p><strong>Daha Kısa ve Anlaşılır Kod:</strong> Kotlin, daha az boilerplate kod gerektiren bir dil olarak bilinir. Bu, kodun daha temiz, kısa ve anlaşılır olmasını sağlar.</p>\n\n<p><strong>Null Güvenliği:</strong> Kotlin, dil düzeyinde null güvenliği sunar. Bu özellik, NullPointerException (NPE) türünden hataların önüne geçmeye yardımcı olur.</p>\n\n<p><strong>Fonksiyonel Programlama Özellikleri:</strong> Kotlin, fonksiyonel programlamaya uygun özellikleri destekler. Lambda ifadeleri, yüksek seviyeli fonksiyonlar gibi özellikler kullanılarak daha işlevsel kodlar yazabilirsiniz.</p>\n\n<p><strong>Modern ve Güncel:</strong> Kotlin, modern programlama dillerinin sunduğu birçok özelliği içerir. Bu da geliştiricilere daha güçlü ve verimli bir dil kullanma imkanı tanır.</p>\n\n<p><strong>Android Geliştirme İçin Resmi Dil:</strong> Kotlin, Android uygulama geliştirme için resmi dil olarak kabul edildi. Bu nedenle, Android uygulamaları geliştirmek isteyenler için iyi bir tercihtir.</p>",
                "disadvantage": "<p><strong>Öğrenme Eğrisi:</strong> Java geliştiricileri için Kotlin'e geçiş genellikle sorunsuz olsa da, başlangıçta bir öğrenme eğrisi bulunabilir.</p>\n\n<p><strong>Dilin Yaygınlığı:</strong> Kotlin, Java kadar yaygın kullanılan bir dil olmasa da, özellikle Android geliştirme topluluğu içinde hızla popülerlik kazanmaktadır. Ancak, genel olarak Java'nın hala daha yaygın kullanıldığını söyleyebiliriz.</p>\n\n<p><strong>Derleme Süresi:</strong> Kotlin'in derleme süresi, Java'ya göre biraz daha uzun olabilir. Bu durum, büyük projelerde derleme sürelerinin artmasına neden olabilir.</p>\n\n<p><strong>Bağımlılık Sorunları:</strong> Kotlin, Java ile entegrasyonu kolay olsa da, bazen bağımlılık sorunları yaşanabilir. Özellikle karmaşık projelerde, kütüphane uyumsuzlukları gibi sorunlar ortaya çıkabilir.</p>\n\n<p><strong>Kotlin Native ve JS Eksikliği:</strong> Kotlin, JVM (Java Virtual Machine) dışında çalışabilen Kotlin Native ve Kotlin/JS gibi platformlar için geliştirilmekte olmasına rağmen, bu platformlarda Java kadar olgun değildir. Bu nedenle, bu platformlarda geliştirme yapmak isteyenler için bazı eksiklikler bulunabilir.</p>",
                "whyThisLanguage": "Kotlin, Android uygulama geliştirmeyi daha verimli hale getiren modern bir programlama dilidir. Java'ya kıyasla daha az kod yazmayı sağlar ve daha güvenli bir kod yazımı deneyimi sunar. Ayrıca, Kotlin'in Java ile sorunsuz entegrasyonu ve Android Studio'nun tam desteği sayesinde mevcut projelerde kolayca kullanılabilir. Kısacası, Kotlin'in daha okunabilir, daha güvenli ve daha verimli bir kod yazım süreci sunması, geliştiricilerin tercih etmesindeki ana nedenlerdendir.",
                "projects": "Dünyaca bilinen ve son derece popüler olan birçok büyük şirket de Kotlin programlama dilini kullanmaktadır. Netflix, Uber, Trello, Google, Tinder, Airbnb, Slack, Corda, Pinterest bunlardan yalnızca birkaçıdır. Ayrıca bu uygulamada Kotlin dile yazılmıştır.",
                "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=kotlin",
                "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/kotlin.png",
                "library": [
                    "Android Jetpack -> Android uygulama geliştirmeyi kolaylaştıran Google tarafından oluşturulan bir kütüphane koleksiyonudur.",
                    "Retrofit -> RESTful API'larla etkileşimde bulunmak için kullanılan bir HTTP istemcisi kütüphanesidir.",
                    "OkHttp ->  HTTP istekleri göndermek ve almak için kullanılan hızlı ve güçlü bir kütüphanedir.",
                    "Glide & Picasso -> Android uygulamalarında görüntüleri işlemek için kullanılan popüler resim işleme kütüphaneleridir.",
                    "Room -> Android uygulamaları için yerel SQLite veritabanı işlemlerini basitleştiren bir ORM kütüphanesidir.",
                    "Firebase -> Google'ın sunucu tarafı altyapısını ve çeşitli hizmetleri içeren bulut tabanlı bir geliştirme platformudur.",
                    "Dagger Veya Hilt -> Bağımlılık enjeksiyonu için kullanılan kütüphanelerdir. Uygulama bileşenlerini yönetmeye yardımcı olurlar.",
                    "RxJava Veya Kotlin Coroutines -> Asenkron işlemleri yönetmek ve reaktif programlama prensiplerini uygulamak için kullanılan kütüphanelerdir.",
                    "JUnit VE Espresso -> Android uygulama testleri için kullanılan popüler test kütüphaneleridir.",
                    "Proguard Veya R8 -> Android uygulamalarını küçültmek, optimize etmek ve güvenli hale getirmek için kullanılan araçlardır. ProGuard daha önce yaygın olarak kullanılmıştır, ancak R8 artık daha yaygın olarak tercih edilen bir araçtır."
                ]
            },
            {
                "name": "Swift",
                "info": "Swift, Apple tarafından geliştirilen ve özellikle iOS, macOS, watchOS ve tvOS gibi Apple platformları için tasarlanmış bir programlama dilidir. Swift, Objective-C'nin yerini almak üzere 2014 yılında tanıtılmıştır ve modern, güvenli, hızlı ve interaktif bir dil olarak öne çıkmaktadır.",
                "advantage": "<p><strong>Güvenlik ve Performans:</strong> Swift, güvenli bir programlama dili olarak tasarlanmıştır. Değişkenlerin ve dizilerin kullanımı sırasında olası hataları önlemek için dilin yapıları ve sözdizimi özenle hazırlanmıştır. Ayrıca, Swift'in performansı da oldukça yüksektir, bu da uygulamaların daha hızlı çalışmasını sağlar.</p>\n\n<p><strong>Kolay Öğrenme ve Kullanım:</strong> Swift, anlaşılması kolay bir sözdizimine sahiptir. Bu, yeni başlayanlar için dilin öğrenilmesini kolaylaştırır ve geliştiricilerin daha hızlı bir şekilde üretken olmalarını sağlar.</p>\n\n<p><strong>Modern Özellikler:</strong> Swift, modern programlama dillerinin sunduğu birçok özelliği bünyesinde barındırır. Bunlar arasında tip güvenliği, örüntü eşleme, kapanışlar (closures), ve güçlü tip çıkarımı gibi özellikler bulunur.</p>\n\n<p><strong>Apple Platformları ile Entegrasyon:</strong> Swift, Apple'ın tüm platformlarında (iOS, macOS, watchOS, tvOS) desteklenir ve bu platformlarla mükemmel bir şekilde entegre olabilir. Bu da geliştiricilere geniş bir hedef kitlesine hitap etme imkanı sunar.</p>\n\n<p><strong>Gelişmiş Hata Ayıklama ve Araçlar:</strong> Xcode, Swift için geliştirilen entegre geliştirme ortamıdır ve gelişmiş hata ayıklama ve kod tamamlama gibi araçlarla gelir. Bu da geliştiricilerin daha verimli çalışmalarını sağlar.</p>\n\n<p><strong>Açık Kaynak ve Topluluk Desteği:</strong> Swift, açık kaynaklı bir dildir ve geniş bir geliştirici topluluğu tarafından desteklenmektedir. Bu da dilin sürekli olarak gelişmesine ve yeni özelliklerin eklenmesine olanak tanır.</p>",
                "disadvantage": "<p><strong>Geçişkenlik ve Sürekli Değişim:</strong> Swift, gelişmekte olan bir dil olduğundan, zaman zaman dilde değişiklikler ve güncellemeler olabilir. Bu durum, mevcut kodların geçerliliğini etkileyebilir ve geliştiriciler için uyum sağlama zorluğu yaratabilir.</p>\n\n<p><strong>Belirsizlikler:</strong> Swift'in hala gelişmekte olan bir dil olması, bazı konularda belirsizlikler yaratabilir. Özellikle, dilin geleceği hakkında net bir yol haritası olmaması bazı geliştiriciler için endişe kaynağı olabilir.</p>\n\n<p><strong>Performans Sorunları:</strong> Her ne kadar Swift genellikle yüksek performanslı bir dil olarak kabul edilse de, bazı durumlarda Objective-C'ye göre daha yavaş çalışabilir. Özellikle, bazı karmaşık operasyonlar veya derleme süreçleri performans sorunlarına neden olabilir.</p>\n\n<p><strong>Dokümantasyon ve Kaynak Sıkıntısı:</strong> Swift'in henüz genç bir dil olması, kapsamlı ve güncel dokümantasyonun eksikliğine neden olabilir. Bu durum, özellikle yeni başlayanlar için öğrenme sürecini zorlaştırabilir.</p>\n\n<p><strong>Platform Bağımlılığı:</strong> Swift, sadece Apple'ın platformlarında (iOS, macOS, watchOS, tvOS) desteklenmektedir. Bu da, Swift kullanarak geliştirilen uygulamaların diğer platformlara (örneğin, Android) taşınmasını zorlaştırabilir.</p>",
                "whyThisLanguage": "Swift, iOS ve macOS uygulama geliştirmeyi hızlı, güvenli ve etkili hale getiren modern bir programlama dilidir. Objective-C'ye kıyasla daha anlaşılır ve okunabilir bir sözdizimine sahiptir, bu da geliştirme sürecini daha verimli kılar. Güçlü bir standart kütüphane ve gelişmiş hata işleme mekanizmalarıyla birlikte gelir. Ayrıca, Apple'ın sürekli olarak geliştirdiği ve desteklediği bir dil olması, Swift'i iOS ve macOS platformları için tercih edilen bir seçenek haline getirir.",
                "projects": "Swift, iOS uygulamaları geliştirmek için Apple'ın önerdiği ve yaygın olarak kullanılan bir dil olduğundan, birçok popüler uygulama Swift kullanılarak geliştirilmiştir. Instagram, LinkedIn, Tinder, Pinterest bunlardan yalnızca birkaçıdır.",
                "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=swift",
                "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/swift.png",
                "library": [
                    "Alamofire -> HTTP ağ istekleri için kullanılan basit ve güçlü bir kütüphane.",
                    "SwiftyJSON -> JSON verileri işlemek için kullanılan kolay ve güvenilir bir kütüphane.",
                    "Kingfisher -> Görselleri indirmek, önbelleğe almak ve göstermek için kullanılan hızlı ve hafif bir kütüphane.",
                    "SnapKit -> Auto Layout'u daha okunabilir ve kullanımı kolay hale getiren bir DSL (Domain Specific Language) kütüphanesi.",
                    "Realm -> Veritabanı işlemleri için hızlı ve kullanımı kolay bir kütüphane.",
                    "Firebase -> Firebase platformunun sunduğu çeşitli hizmetleri entegre etmek için kullanılan resmi Firebase SDK'ları.",
                    "RxSwift -> Asenkron ve olay tabanlı programlamayı destekleyen bir kütüphane.",
                    "SwiftLint -> Swift kodunuzu standartlara uygun hale getirmenize yardımcı olan bir kod denetleme aracı."
                ]
            },
            {
                "name": "Flutter",
                "info": "Flutter, iOS, Android ve Windows için platformlar arası uygulamalar oluşturmak için kullanılabilen sağlam bir mobil uygulama geliştirme çerçevesidir. Google’ın Dart programlama dilini kullanır ve kendi grafik kütüphanesi ve malzeme tasarımıyla birlikte gelir, bu da daha hızlı uygulama geliştirme ve daha göz alıcı bir ürün elde etmenizi sağlar.",
                "advantage": "<p><strong>Hızlı Geliştirme:</strong> Hot Reload özelliği sayesinde, kodu anında görüntüleyebilir ve geliştirebilirsiniz. Bu, hızlı iterasyonlar ve geliştirme süreçlerini hızlandırır.</p>\n\n<p><strong>Tek Kod Tabanı:</strong> Flutter, hem iOS hem de Android için tek bir kod tabanıyla çalışır. Bu, uygulama geliştirmeyi daha kolay ve tutarlı hale getirir.</p>\n\n<p><strong>Zengin Widget Kütüphanesi:</strong> Flutter, zengin ve özelleştirilebilir widget kütüphanesi ile birlikte gelir. Bu, kullanıcı arayüzünü kolayca oluşturmanıza ve özelleştirmenize olanak tanır.</p>\n\n<p><strong>Performans:</strong> Dart diline derlenen native kodu kullanarak çalıştığı için Flutter uygulamaları yüksek performans sunar.</p>\n\n<p><strong>Topluluk Desteği:</strong> Flutter, büyük ve aktif bir topluluğa sahiptir. Bu, sorunlarınızı çözmek veya yeni şeyler öğrenmek için kaynaklara daha kolay erişebileceğiniz anlamına gelir.</p>\n\n<p><strong>Platform Bağımsızlık:</strong> Flutter, farklı platformlarda (iOS, Android, web, masaüstü) çalışabilme esnekliği sağlar.</p>\n\n<p><strong>Güçlü Dokümantasyon:</strong> Flutter'ın kapsamlı ve güncel dokümantasyonu, geliştiricilere rehberlik ve destek sağlar.</p>",
                "disadvantage": "<p><strong>Uygulama Boyutu:</strong> Flutter uygulamalarının APK veya IPA dosyalarının büyüklüğü bazen diğer teknolojilere göre daha fazla olabilir.</p>\n\n<p><strong>Platform Özelliklerine Erişim:</strong> Flutter, platform özelliklerine erişim konusunda bazı kısıtlamalara sahip olabilir. Özellikle yeni çıkan platform özelliklerine hemen erişim mümkün olmayabilir.</p>\n\n<p><strong>Widget Farklılıkları:</strong> iOS ve Android arasında bazı widget farklılıkları olabilir ve bu, uygulamanın her iki platformda da tamamen aynı görünmesini zorlaştırabilir.</p>",
                "whyThisLanguage": "Flutter, hızlı, güzel ve native performans sunan bir mobil uygulama geliştirme framework'üdür. Tek bir kod tabanıyla hem iOS hem de Android için uygulama geliştirmeyi sağlar, bu da geliştirme sürecini hızlandırır ve maliyetleri düşürür. Dart adlı basit ve hızlı bir dil kullanır ve zengin widget kütüphanesi ile kullanıcı arayüzlerini kolayca oluşturmanızı sağlar. Ayrıca, hızlı yeniden derleme özelliği sayesinde anlık değişiklikleri hızlıca görebilirsiniz, bu da geliştirme sürecini daha verimli hale getirir. Bu nedenlerle, Flutter birçok geliştiricinin tercih ettiği bir çözüm haline gelmiştir.",
                "projects": "Örneğin, eBay’in ana ürünlerinden biri olan eBay Motors, Flutter ile oluşturulmuştur. Kullanıcılar bu uygulamayı kullanarak araç alıp satabilir ve sadece birkaç dokunuşla tekliflere göz atabilir, reklam yayınlayabilir ve beğendikleri teklifler için teklif verebilir.\nFlutter ile oluşturulan diğer uygulama örnekleri arasında Stadia, Google Ads, Google Asistan, Alibaba Group’un Xianyu uygulaması, The New York Times mobil uygulaması vb. yer alır.",
                "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=flutter",
                "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/flutter.png",
                "library": [
                    "Flutter Bloc -> Flutter uygulamalarınız için durum yönetimi ve olay yönetimi için kullanılan bir kütüphane.",
                    "Flutter Redux -> Redux mimarisi ile Flutter uygulamalarını yönetmek için kullanılır. Uygulama durumunu merkezi bir depoda saklar.",
                    "Flutter Firebase -> Firebase hizmetlerini Flutter uygulamalarına entegre etmek için kullanılır. Oturum açma, veritabanı, depolama ve diğer Firebase özelliklerini kullanmanıza olanak tanır.",
                    "Flutter Chart -> Grafik ve grafikler oluşturmak için kullanılır. Verileri çeşitli grafik türlerine dönüştürmek için kullanışlıdır.",
                    "Flutter Dio -> HTTP isteklerini yapmak ve API'larla iletişim kurmak için kullanılır. Veri alma ve gönderme işlemlerini kolaylaştırır.",
                    "Flutter SVG -> SVG (Scalable Vector Graphics) dosyalarını Flutter uygulamalarında görüntülemek ve işlemek için kullanılır.",
                    "Flutter Provider -> Flutter uygulamalarında veri akışını ve durumu yönetmek için kullanılır. State Management için bir seçenek sunar.",
                    "Flutter SharedPreferences -> Uygulama verilerini yerel depolamada (SharedPreferences) saklamak ve erişmek için kullanılır. Küçük verilerin tutulması için idealdir.",
                    "Flutter Form Builder -> Formlar oluşturmak ve doğrulama işlemlerini kolaylaştırmak için kullanılır. Kullanıcı girişi ve veri girişi işlemlerini yönetmek için kullanışlıdır.",
                    "Flutter Image Picker -> Kullanıcının cihazından veya kamera ile fotoğraf seçmesine ve yüklemesine izin veren bir kütüphanedir. Resim seçme işlemlerini kolaylaştırır."
                ]
            },
            {
                "name": "React Native",
                "info": "React Native, React kullanarak yerel uygulamalar oluşturmaya yönelik bir çerçevedir. Android ve iOS cihazlardan Windows sistemlerine kadar her şeyi hedefleyen uygulamalar geliştirmek için kullanılabilir.",
                "advantage": "<p><strong>Çapraz Platform Geliştirme:</strong> React Native, hem iOS hem de Android için tek bir kod tabanında çalışabilir. Bu, geliştirme süreçlerini hızlandırır ve maliyetleri düşürür.</p>\n\n<p><strong>Hızlı Geliştirme:</strong> Hot Reload özelliği sayesinde, kodu anında görüntüleyebilir ve değişiklikleri hemen görebilirsiniz. Bu, hızlı iterasyonları sağlar.</p>\n\n<p><strong>JavaScript Kullanımı:</strong> React Native, JavaScript tabanlı bir çerçevedir, bu da birçok geliştiricinin zaten bildiği bir dil kullanmasını sağlar.</p>\n\n<p><strong>Geniş Topluluk Desteği:</strong> React Native, büyük ve aktif bir topluluğa sahiptir. Bu, sorunları çözmek veya yeni şeyler öğrenmek için kaynaklara daha kolay erişim sağlar.</p>\n\n<p><strong>Canlı Yeniden Yükleme (Live Reload):</strong> Canlı Yeniden Yükleme özelliği, geliştirme sırasında anlık değişikliklerin uygulamaya yansıtılmasını sağlar.</p>\n\n<p><strong>React Tabanlı Yapı:</strong> React Native, React üzerine kurulmuştur ve bu nedenle React konseptlerini içerir. Bu, React kullanıcıları için öğrenme eğrisini azaltır.</p>",
                "disadvantage": "<p><strong>Performans:</strong> Native geliştirme kadar performanslı olmayabilir, özellikle çok karmaşık ve yüksek performans gerektiren uygulamalarda.</p>\n\n<p><strong>Platforma Özgü Modüllere Erişim Zorlukları:</strong> React Native, platforma özgü modüllere erişim konusunda bazı zorluklar yaşayabilir. Bu, belirli özelliklere erişimde bazı kısıtlamalara neden olabilir.</p>\n\n<p><strong>Büyük Uygulama Boyutları:</strong> React Native uygulamalarının APK veya IPA dosyaları bazen diğer teknolojilere göre daha büyük olabilir.</p>\n\n<p><strong>Geliştirme Yönergeleri Değişiklikleri:</strong> Platformlar arasındaki geliştirme yönergelerindeki değişiklikler, uyumluluk sorunlarına neden olabilir.</p>\n\n<p><strong>Bazı Platform Özelliklerine Tam Erişim Yok:</strong> React Native, bazı platform özelliklerine tam erişim sağlayamayabilir veya bazı özellikleri eksik veya sınırlı sunabilir.</p>",
                "whyThisLanguage": "React Native, hem iOS hem de Android için aynı kod tabanını kullanarak mobil uygulama geliştirmeyi sağlayan bir framework'tür. Bu, geliştirme sürecini hızlandırır ve maliyetleri düşürür. React Native, JavaScript tabanlı olduğu için web geliştiricilerinin kolayca öğrenip kullanabileceği bir dil kullanır. Ayrıca, performansı native uygulamalara yakın düzeyde tutar ve Facebook gibi büyük şirketler tarafından desteklenir. Bu nedenlerle, React Native birçok geliştiricinin tercih ettiği bir mobil uygulama geliştirme çözümü haline gelmiştir.",
                "projects": "React Native, büyük şirketlerin tercih ettiği bir çerçeve olduğundan, birçok tanınmış markanın mobil uygulamaları bu teknolojiyi kullanarak geliştirilmiştir. Facebook'un mobil uygulaması, Instagram, Airbnb'nin bazı bölümleri, UberEATS'in belirli versiyonları ve Tesla'nın mobil uygulaması, React Native'in gücünü ve esnekliğini sergileyen örnekler arasında yer almaktadır. Bu uygulamalar, React Native'in hem iOS hem de Android platformlarında kullanılabilen çok yönlü bir çözüm olduğunu göstermektedir.",
                "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=react+native",
                "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/reactnative.png",
                "library": [
                    "Axios -> React Native uygulamaları için HTTP istekleri yapmak ve API'larla iletişim kurmak için kullanılan bir kütüphane. Axios, basit ve güçlü bir HTTP istek istemcisidir.",
                    "Redux ve react-redux -> Uygulama durumunu yönetmek için kullanılan bir veri depolama ve yönetim kütüphanesidir. React Native uygulamalarında, react-redux, Redux ile entegrasyon sağlar.",
                    "NativeBase -> React Native için bir UI bileşen kütüphanesidir. Önceden oluşturulmuş bileşenler sunar ve uygulama arayüzünü tasarlarken zaman kazandırır.",
                    "React Native Push Notifications -> Bildirimlerinizi yönetmek ve kullanıcılara bildirim göndermek için kullanılır. Push bildirimleri için bir arabirim sağlar.",
                    "React Native Elements -> React Native için özel tasarlanmış, özelleştirilebilir UI bileşenleri koleksiyonunu içerir. İşlevselliği artırmak ve uygulama geliştirme sürecini hızlandırmak için kullanılır.",
                    "React Native Config -> Ortam değişkenlerini yönetmek ve uygulama yapılandırmalarını ayarlamak için kullanılır. Uygulama konfigürasyonunu basit ve düzenli bir şekilde ele alır.",
                    "React Native Permissions ->  Kullanıcının izinlerini yönetmek ve izin gerektiren özelliklere erişim izni almak için kullanılır. Örneğin, kamera veya konum izinleri gibi.",
                    "React Native Maps -> Harita bileşenleri ve harita entegrasyonu için kullanılır. Konumları harita üzerinde göstermek ve interaktif haritalar oluşturmak için idealdir.",
                    "React Native Net Info -> Cihazın internet bağlantısını izlemek ve bağlantı durumuyla ilgili bilgileri sağlamak için kullanılır. Uygulama, çevrimiçi veya çevrimdışı durumu anlamak için kullanabilir.",
                    "React Native UI Kitten -> Şık ve özelleştirilebilir kullanıcı arayüzü bileşenleri sağlayan bir kütüphanedir. UI tasarımınızı geliştirmek ve kişiselleştirmek için kullanılır."
                ]
            }
        ],
        "salary": [
            {
                "personalSalaryCount": "339 kişinin paylaştığı maaş verilerine göre hesaplanmıştır."
            },
            {
                "price": "37.200₺",
                "type": "EN DÜŞÜK",
                "period": "(Aylık)"
            },
            {
                "price": "137.500₺",
                "type": "EN YÜKSEK",
                "period": "(Aylık)"
            },
            {
                "price": "46.500₺",
                "type": "Ortalama Maaş",
                "period": "(Aylık)"
            }
        ]
    },
    "web": {
        "backend": {
            "languages": [
                {
                    "name": "Node.js",
                    "info": "Node.js, yazılım geliştiricilerinin web sayfaları, uygulamalar ve sunucular geliştirirken kullandıkları dinamik hafif bir programlama dilidir. Node.js kullanarak etkileşimli ve dinamik web sayfaları geliştirilir. Yazılım geliştiriciler tarafından en yaygın kullanılan temel yazılım dillerinin başında gelmektedir.",
                    "advantage": "<p><strong>Hızlı Geliştirme:</strong> JavaScript'in esnek yapısı ve tarayıcıda çalışabilmesi, hızlı prototipleme ve geliştirme imkanı sağlar.</p>\n\n<p><strong>Çapraz Platform Desteği:</strong> Node.js, çeşitli platformlarda çalışabilir, bu da yazılan kodun farklı ortamlarda kullanılabilir olmasını sağlar.</p>\n\n<p><strong>Geniş Kullanıcı Tabanı ve Topluluk Desteği:</strong> JavaScript, geniş bir kullanıcı tabanına ve aktif bir topluluğa sahiptir. Bu, sorularınız için çabuk cevaplar bulmanızı ve geliştirme sürecinizde destek almanızı kolaylaştırır.</p>\n\n<p><strong>Hızlı İşlemler:</strong> Node.js, asenkron işlemleri destekler ve non-blocking I/O operasyonları sayesinde yüksek performanslı uygulamalar geliştirmenize olanak tanır.</p>\n\n<p><strong>Büyük Modül Ekosistemi:</strong> Node.js, NPM (Node Package Manager) aracılığıyla geniş bir modül ve paket ekosistemine sahiptir. Bu, geliştiricilere çeşitli özellikleri kolayca ekleyebilme imkanı sunar.</p>\n\n<p><strong>Verimli ve Hafif:</strong> Node.js, etkili bir şekilde kaynakları kullanır ve hafif bir altyapıya sahiptir. Bu, hızlı çalışma ve düşük sistem kaynakları kullanımı anlamına gelir.</p>",
                    "disadvantage": "<p><strong>Tek İş Parçacığı:</strong> Node.js, tek bir iş parçacığında çalıştığı için CPU yoğun işlemlerde performans sorunlarına neden olabilir. Bu durumu aşmak için ek önlemler alınması gerekebilir.</p>\n\n<p><strong>Callback Cehennemi:</strong> Derinleşen callback'lerle (geri çağrılar) karmaşık bir kod yapısı oluşturabilir. Bu, callback hell olarak adlandırılan bir duruma yol açabilir.</p>\n\n<p><strong>Yetenek Eksikliği:</strong> Node.js, bazı durumlarda çoklu işlem ve çok çekirdekli işlemcilerle çalışma yeteneğine sınırlamalar getirebilir. Bu, bazı uygulamalar için dezavantaj olabilir.</p>\n\n<p><strong>Modül Standartları:</strong> NPM'de bulunan modüllerin kalitesi ve güvenilirliği konusunda standart bir denetim mekanizması olmaması, bazen güvenlik risklerine yol açabilir.</p>\n\n<p><strong>Yeni Başlayanlar İçin Öğrenme Eğrisi:</strong> Asenkron programlama ve callback konsepti, yeni başlayanlar için öğrenmesi zor olabilir.</p>\n\n<p><strong>Veri Tabanı Sınırlamaları:</strong> Node.js, bazı durumlarda büyük, karmaşık veritabanlarıyla başa çıkmakta zorlanabilir. Bu durumu çözmek için ek modüller ve çözümler gerekebilir.</p>",
                    "whyThisLanguage": "Node.js, hızlı ve ölçeklenebilir ağ uygulamaları geliştirmek için kullanılan bir JavaScript çalıştırma ortamıdır. Event-driven ve non-blocking I/O modeli sayesinde yüksek performanslı uygulamalar oluşturmayı sağlar. Ayrıca, geniş bir paket ekosistemi ve aktif bir topluluğa sahiptir, bu da geliştirme sürecini hızlandırır. Node.js'in JavaScript tabanlı olması, web geliştiricilerinin kolayca öğrenip kullanabilmesini sağlar. Bu nedenlerle, Node.js birçok geliştiricinin tercih ettiği bir teknoloji haline gelmiştir.",
                    "projects": "Google Chrome, Firefox, Safari vb. popüler web tarayıcılarının çoğu tarafından desteklenir. Günümüzde her gün kullandığımız, yaşamımızın olmazsa olmaz parçalarından bazıları haline gelen Youtube, Twitter, Facebook gibi sayfaların birçok özelliği JavaScript dili ile oluşturulmuştur. ",
                    "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=node",
                    "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/nodejs.png",
                    "library": [
                        "React JS -> Facebook tarafından geliştirilen bir JavaScript kütüphanesidir. Kullanıcı arayüzleri oluşturmak için kullanılır ve bileşen tabanlı bir yaklaşım sunar.",
                        "Angular -> Google tarafından geliştirilen bir JavaScript çerçevesidir. Büyük ölçekli web uygulamaları geliştirmek için kullanılır ve geniş bir özellik yelpazesi sunar.",
                        "Vue.js -> Progressive JavaScript çerçevesidir ve kullanıcı arayüzü oluşturmak için kullanılır. Basit ve hafif bir yapıya sahiptir ve kolayca öğrenilebilir.",
                        "Express.js -> Node.js üzerinde çalışan hızlı ve esnek bir web uygulama çerçevesidir. Sunucu tarafı uygulamalar geliştirmek için idealdir.",
                        "jQuery -> JavaScript kütüphanesidir ve HTML dokümanları üzerinde gezinme, olay işleme, animasyonlar ve AJAX iletişimi gibi işlevleri kolaylaştırır.",
                        "Node.js -> Sunucu tarafı uygulamalar geliştirmek için kullanılan bir JavaScript çalıştırma ortamıdır. Hızlı, hafif ve etkili bir şekilde ağ tabanlı uygulamalar oluşturmanızı sağlar."
                    ]
                },
                {
                    "name": "Django",
                    "info": "Django, Python kullanarak web siteleri oluşturmayı kolaylaştıran bir Python framework’dür. Ücretsiz ve açık kaynaklı bir framework’dür. Django, developer’ların hızlı bir şekilde zengin özelliklere sahip, güvenli ve ölçeklenebilir bir web uygulaması oluşturmasına yardımcı olur. ",
                    "advantage": "<p><strong>Hızlı Geliştirme:</strong> Django, hızlı ve verimli bir geliştirme süreci sunar. Yüksek seviyeli bir framework olarak, yazılım geliştirme sürecini hızlandırır.</p>\n\n<p><strong>Tam Yığın Framework:</strong> Django, birçok bileşeni içinde barındıran tam yığın bir web framework'üdür. URL yönlendirmesi, veritabanı modelleri, şablonlar, form işleme gibi birçok işlevi kapsar.</p>\n\n<p><strong>ORM (Object-Relational Mapping) Desteği:</strong> Django'nun sahip olduğu ORM, veritabanı işlemlerini daha kolay ve etkili bir şekilde yönetmenize olanak tanır. SQL bilgisi gereksinimini azaltır.</p>\n\n<p><strong>Güvenlik:</strong> Django, güvenlik konusunda önemli özelliklere sahiptir. Önlemler, Cross-Site Scripting (XSS), Cross-Site Request Forgery (CSRF) gibi saldırılara karşı koruma sağlar.</p>\n\n<p><strong>Topluluk Desteği:</strong> Python ve Django, büyük ve aktif bir topluluğa sahiptir. Sorularınıza hızlı cevaplar bulabilir, belgelere ve kaynaklara kolayca erişebilirsiniz.</p>\n\n<p><strong>Modüler ve Genişletilebilir:</strong> Django, modüler bir yapıya sahiptir ve ihtiyaca göre genişletilebilir. Django REST framework gibi eklentilerle web API'leri oluşturabilirsiniz.</p>",
                    "disadvantage": "<p><strong>Öğrenme Eğrisi:</strong> Django, bazen yeni başlayanlar için öğrenmesi zor olabilir. Ancak, temel Python bilgisine sahip geliştiriciler için öğrenme eğrisi daha düşüktür.</p>\n\n<p><strong>Katı Yapı:</strong> Django, belirli bir yapıyı takip etmektedir. Bu, projenizin gereksinimlerine uymayan durumlar için esneklikte bazı kısıtlamalara yol açabilir.</p>\n\n<p><strong>Monolitik Tasarım:</strong> Django, monolitik bir tasarıma sahiptir. Büyük ölçekli ve mikro hizmet mimarileri gerektiren projeler için uygun olmayabilir.</p>\n\n<p><strong>Tasarımın Genel Kontrolü:</strong> Django, projedeki tasarımın büyük bir kısmını kontrol eder. Bu, bazı geliştiriciler için olumlu bir özellik olabilir ancak diğerleri için sınırlayıcı olabilir.</p>\n\n<p><strong>REST API Desteği:</strong> Django, REST API geliştirmek için kullanılabilir, ancak Django REST framework gibi ek araçlar kullanılarak daha geniş bir özellik setine ulaşılabilir.</p>",
                    "whyThisLanguage": "Django, hızlı ve güvenli web uygulamaları geliştirmek için kullanılan bir Python web framework'üdür. Model-View-Template (MVT) mimarisine dayalıdır ve geliştirme sürecini hızlandırmak için birçok hazır bileşen ve modül içerir. Güçlü bir ORM (Object-Relational Mapping) sistemiyle veritabanı işlemlerini kolaylaştırır ve güvenlik konusunda önemli önlemler sunar. Ayrıca, geniş bir topluluğa ve kapsamlı belgelere sahiptir, bu da Django'nun tercih edilme nedenlerinden biridir.",
                    "projects": "Django kullanan web sitelerinin sayısı hızla arttı. Django ile geliştirilmiş ve en çok bilinen uygulamalarından bazıları YouTube, Pinterest, Washington Post, Dropbox, Disqus, Instagram, BitBucket ve Spotify'dır.",
                    "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=django",
                    "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/django.png",
                    "library": [
                        "Django Rest Framework (DRF) -> Django tabanlı web API'leri hızlı ve kolay bir şekilde oluşturmanıza olanak tanır. RESTful API geliştirmek için kullanılır.",
                        "Celery -> Dağıtık görev kuyruğu yöneticisidir. Asenkron işlemleri, zamanlanmış görevleri ve iş parçacığı dışı işlemleri kolayca işlemek için kullanılır.",
                        "Pillow -> Python için güçlü bir görüntü işleme kütüphanesidir. Görüntüleri açma, düzenleme ve saklama işlemlerini sağlar.",
                        "Django Allauth -> Django tabanlı kimlik doğrulama ve oturum açma süreçlerini yönetmek için kullanılır. Kullanıcı hesapları ve oturumları oluşturmak için kullanışlıdır.",
                        "Django Crispy Forms -> Django web formlarını daha düzenli ve şık hale getirmek için kullanılır. Formların görünümünü geliştirmek için idealdir.",
                        "Django Debug Toolbar -> Django uygulamalarınızın hata ayıklama süreçlerini kolaylaştırmak için kullanılır. Performans izleme ve hata ayıklama araçları sunar.",
                        "Django Haystack -> Django tabanlı uygulamalar için hızlı ve etkili arama işlevselliği sağlar. Veritabanı ve dış arama motorlarıyla entegrasyonu destekler.",
                        "Django Channels -> Django uygulamalarına gerçek zamanlı iletişim ve WebSocket desteği eklemek için kullanılır. Django projelerine etkileşimli özellikler eklemek için idealdir."
                    ]
                },
                {
                    "name": "PHP",
                    "info": "PHP, yazılım geliştiriciler için oldukça popüler olan, web tabanlı, HTML içine gömülebilen, nesne yönelimli bir programlama dilidir. E-ticaret sitelerinden CRM sistemlerine kadar kullanılabilen genel amaçlı bir dildir.",
                    "advantage": "<p><strong>Geniş Kullanım Alanı:</strong> PHP, özellikle web geliştirmesi için yaygın olarak kullanılan bir dilidir. Birçok büyük web sitesi ve uygulama, PHP tabanlıdır.</p>\n\n<p><strong>Kolay Öğrenme:</strong> PHP, öğrenmesi relatif olarak kolay olan bir dilidir. Özellikle HTML ile entegrasyonu ve başlangıç seviyesindeki geliştiriciler için erişilebilir olması avantaj sağlar.</p>\n\n<p><strong>Çok Platformlu Desteği:</strong> PHP, farklı işletim sistemlerinde ve web sunucularında çalışabilir. Bu, geniş bir platformda uygulamalar geliştirmenin mümkün olmasını sağlar.</p>\n\n<p><strong>Geniş Topluluk Desteği:</strong> PHP'nin büyük ve aktif bir topluluğa sahip olması, sorularınıza hızlı cevaplar bulmanızı ve kaynaklara kolayca erişmenizi sağlar.</p>\n\n<p><strong>Veritabanı Entegrasyonu:</strong> PHP, birçok farklı veritabanı yönetim sistemiyle (MySQL, PostgreSQL, Oracle vb.) uyumlu çalışabilir.</p>",
                    "disadvantage": "<p><strong>Dağınık Standart Kütüphane:</strong> PHP'nin standart kütüphanesi, bazen düzensiz ve dağınık olabilir. Bu durum, bazı durumlarda geliştiricilere ek iş yükü getirebilir.</p>\n\n<p><strong>Performans:</strong> Diğer dillerle kıyaslandığında, PHP'nin performansı bazı durumlarda daha düşük olabilir. Ancak, bu konuda yapılan geliştirmelerle performans artırılabilir.</p>\n\n<p><strong>Güvenlik Sorunları:</strong> PHP'nin geçmişinde güvenlik açıkları bulunmuştur. Ancak, bu sorunlar zamanla geliştirilmiş ve pek çok güvenlik önlemi eklenmiştir.</p>\n\n<p><strong>Ölçeklenebilirlik Zorlukları:</strong> Büyük ve karmaşık projelerde ölçeklenebilirlik sorunları yaşanabilir. Ancak, bu durum iyi bir kod mimarisi ve doğru altyapı seçimi ile aşılabilecek bir sorundur.</p>\n\n<p><strong>Esneklik:</strong> Bazı geliştiriciler, PHP'nin esnekliğinin aşırı olmasını dezavantaj olarak görebilir. Yapısı gereği esnek olması, disiplin eksikliğine neden olabilir.</p>",
                    "whyThisLanguage": "PHP, web geliştirme için yaygın olarak kullanılan bir programlama dilidir. Özellikle dinamik web siteleri ve web uygulamaları oluşturmak için tercih edilir. PHP, HTML içine gömülerek kullanılabilir ve çeşitli veritabanlarıyla entegrasyonu kolaydır. Ayrıca, geniş bir kullanıcı tabanına ve geniş bir ücretsiz kaynak kitaplığına sahiptir. Bu nedenlerle, PHP, web geliştirme alanında popüler bir tercih haline gelmiştir.",
                    "projects": "PHP yazılım dili Backend Developer ve Full Stack Developer’lar tarafından oldukça sık tercih edilen bir programa dilidir. Günümüzdeki internet sitelerinin büyük çoğunluğunda kullanılır. Facebook, Wikipedia, Yahoo, Slack, Etsy PHP kullanarak geliştirilmiş web sitelerinden bazılarıdır.",
                    "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=php",
                    "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/php.png",
                    "library": [
                        "Laravel -> PHP tabanlı bir web uygulama çerçevesidir. Hızlı geliştirme, güçlü özellikler ve güvenlik önlemleri sunar. Özellikle modern web uygulamaları oluşturmak için popülerdir.",
                        "Symfony -> PHP tabanlı bir web uygulama çerçevesidir. Modüler yapısı ile büyük ve karmaşık projeleri kolayca ele almanıza olanak tanır. Çok sayıda genişletilebilir bileşen içerir.",
                        "Guzzle ->  PHP tabanlı bir HTTP istemci kütüphanesidir. Web hizmetleri ve API'larla etkileşim kurmak için kullanılır. İstekleri gönderme ve yanıtları işleme işlemini kolaylaştırır.",
                        "PHPUnit -> PHP uygulamalarını test etmek için kullanılan bir birim test çerçevesidir. Kodun kalitesini artırmak ve hata ayıklamayı kolaylaştırmak için idealdir.",
                        "Swift Mailer -> PHP ile yazılmış güçlü bir e-posta işleme kütüphanesidir. E-posta iletileri oluşturmak, göndermek ve işlemek için kullanılır.",
                        "Carbon -> PHP tabanlı bir tarih ve saat işleme kütüphanesidir. Tarihler ve saatler üzerinde işlem yapmak için kullanılır ve özellikle zamanlı işlemler için faydalıdır."
                    ]
                },
                {
                    "name": "Ruby",
                    "info": "Ruby, Yukihiro Matsumoto tarafından geliştirilen açık kaynaklı, dinamik, nesne yönelimli ve tamamen özgür bir programlama dilidir. Kullanma, kopyalama, değiştirme ve dağıtma konusunda özgürlük tanır.",
                    "advantage": "<p><strong>Kolay ve Okunabilir Sözdizimi:</strong> Ruby'nin temiz ve doğal dil benzeri sözdizimi, geliştiricilere yazılım geliştirme sürecini hızlı ve anlaşılır hale getirir.</p>\n\n<p><strong>Dinamik ve Esnek:</strong> Ruby, dinamik bir dil olup değişken türlerini çalışma zamanında belirler. Bu, geliştiricilere esneklik sağlar ve kodun daha dinamik olmasına olanak tanır.</p>\n\n<p><strong>Ruby on Rails (RoR):</strong> Ruby'nin popüler web framework'ü olan Ruby on Rails, hızlı ve etkili bir şekilde web uygulamaları geliştirmeyi sağlar. RoR, MVC (Model-View-Controller) mimarisini destekler ve geliştirme sürecini kolaylaştırır.</p>\n\n<p><strong>Zengin Standart Kütüphane:</strong> Ruby, geniş bir standart kütüphaneye sahiptir. Bu kütüphane, geliştiricilere birçok kullanışlı araç ve fonksiyon sunar, böylece yeni özellikler eklemek daha kolaydır.</p>\n\n<p><strong>Topluluk Desteği:</strong> Ruby, büyük ve aktif bir topluluğa sahiptir. Bu, geliştiricilerin sorularına hızlı cevaplar bulmalarını ve deneyimlerini paylaşmalarını sağlar.</p>",
                    "disadvantage": "<p><strong>Performans:</strong> Bazı durumlarda, diğer dillerle kıyaslandığında Ruby'nin performansı daha düşük olabilir. Özellikle büyük ve karmaşık uygulamalarda performans sorunları yaşanabilir.</p>\n\n<p><strong>Dökümantasyon Zayıflığı:</strong> Diğer bazı dillere kıyasla, Ruby'nin bazı kütüphanelerinin dökümantasyonu eksik veya yetersiz olabilir. Bu, yeni başlayanlar için öğrenme sürecini zorlaştırabilir.</p>\n\n<p><strong>Az Gelişmiş Mobil Geliştirme:</strong> Ruby, mobil uygulama geliştirmek için diğer dillere kıyasla daha az tercih edilir. Bu nedenle, mobil uygulama geliştirme konusunda bazı sınırlamalara neden olabilir.</p>\n\n<p><strong>Bellek Yönetimi:</strong> Ruby'nin bellek yönetimi otomatik olmasına rağmen, büyük uygulamalarda bellek sorunları yaşanabilir.</p>",
                    "whyThisLanguage": "Ruby, basit, anlaşılır ve sade bir söz dizimine sahip olan dinamik bir programlama dilidir. Özellikle web geliştirme için Ruby on Rails framework'ü ile birlikte kullanıldığında hızlı ve etkili web uygulamaları geliştirme imkanı sunar. Ruby'nin açık kaynaklı olması ve geniş bir topluluğa sahip olması da geliştirme sürecini kolaylaştırır. Ayrıca, Ruby'nin test odaklı geliştirme ve hata ayıklama süreçlerini destekleyen özellikleri bulunmaktadır. Bu nedenlerle, Ruby birçok geliştiricinin tercih ettiği bir programlama dilidir.",
                    "projects": "Ruby programlama dilinin geniş kapsamlı ve her amaca uygun bir yapısı bulunur. Ruby, web uygulaması geliştirmeden veri analizine kadar pek çok farklı alanda kullanılan popüler bir programlama dilidir. AirBnB, BaseCamp, Github, SoundCloud, SlideShare, Shopify, Hulu, Fiverr ve GoodReads Ruby ile yazılmış popüler web siteleri arasında yer alır. NASA Langley Araştırma Merkezi’nde, Motorola simülasyonlarında ve Google SketchUp komut dosyalarında kullanılmıştır.",
                    "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=ruby",
                    "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/ruby.png",
                    "library": [
                        "Ruby on Rails -> Ruby tabanlı bir web uygulama çerçevesidir. Hızlı geliştirme ve ölçeklenebilirlik için tasarlanmıştır. Model-Görünüm-Denetleyici (MVC) modeline dayanır.",
                        "Sinatra -> Ruby ile yazılmış hafif bir web uygulama çerçevesidir. Basit web uygulamaları oluşturmak için kullanılır ve minimalist bir yaklaşım sunar.",
                        "Hanami -> Ruby ile yazılmış bir web çerçevesidir. Çok yönlü ve modülerdir. Büyük ölçekli Ruby uygulamaları için uygun bir seçenektir.",
                        "Grape -> Ruby tabanlı bir RESTful API çerçevesidir. API'lerin hızlı ve kolayca oluşturulmasını sağlar. Özellikle API geliştirmeye odaklanmıştır.",
                        "Cuba -> Hafif bir Ruby web uygulama çerçevesidir. Ruby dilinin gücünü kullanarak basit ve hızlı web uygulamaları geliştirmek için idealdir.",
                        "Padrino -> Ruby on Rails'den esinlenen başka bir Ruby web uygulama çerçevesidir. Ruby dilini kullanarak web uygulamaları oluşturmayı kolaylaştırır ve özelleştirilebilirliği vurgular."
                    ]
                }
            ]
        },
        "frontend": {
            "languages": [
                {
                    "name": "JavaScript",
                    "info": "JavaScript, web tarayıcılarında çalışan ve web sayfalarını etkileşimli hale getiren temel bir dildir. JavaScript, React, Angular ve Vue.js gibi çerçevelerle birlikte kullanılarak güçlü web arayüzleri oluşturmanızı sağlar.",
                    "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=javascript",
                    "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/javascript.png"
                },
                {
                    "name": "HTML",
                    "info": "(Hyper Text Markup Language) internet sayfaları oluşturmak için kullanılan metin işaretleme dilidir. Bir internet sitesinin iskeleti olarak da nitelendirilebilir. Son sürümü HTML5 olan bu dil dinamik işlevsellik oluşturamadığı için programlama dili olarak tanımlanamaz.Ayrıca HTML, resmi bir web standardı olarak kabul edilmektedir. World Wide Web Consortium (W3C), HTML için düzenli güncellemeler sağlamanın yanı sıra HTML özelliklerini korur ve geliştirir. ",
                    "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=html",
                    "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/html.png"
                },
                {
                    "name": "CSS",
                    "info": "CSS (Cascading Style Sheets), basamaklı stil sayfaları anlamına gelir. Yazı tipi, yazı boyutu, renk, boşluk, kenarlık ve HTML bilgilerinin konumu dahil olmak üzere web sitelerindeki içeriğin sunumu ve biçimlendirilmesi için kullanılan stil sayfası, işaretleme dilidir.Tarayıcı HTML sayfasını yükler ardından HTML’i DOM’ye (Document Object Model) dönüştürür. Daha sonra tarayıcı HTML belgesi ile bağlanan gömülü resimler ve CSS kodlarını barındıran CSS sayfasını getirir. ",
                    "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=css",
                    "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/css.png"
                },
                {
                    "name": "TypeScript",
                    "info": "TypeScript, JavaScript'e bir üst küme olarak kabul edilir ve tür belirleme yetenekleri sunar. Angular gibi bazı çerçeveler TypeScript'i tercih eder.",
                    "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=typescript",
                    "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/typescript.png"
                }
            ]
        },
        "salary": [
            {
                "personalSalaryCount": "262 kişinin paylaştığı maaş verilerine göre hesaplanmıştır."
            },
            {
                "price": "28.500₺",
                "type": "EN DÜŞÜK",
                "period": "(Aylık)"
            },
            {
                "price": "90.000₺",
                "type": "EN YÜKSEK",
                "period": "(Aylık)"
            },
            {
                "price": "35.600₺",
                "type": "Ortalama Maaş",
                "period": "(Aylık)"
            }
        ]
    },
    "game": {
        "languages": [
            {
                "name": "Unity",
                "info": "Unity bir oyun motorundan bekleyebileceğiniz hemen her özelliğe sahip çok fonksiyonlu bir oyun motorudur. 2D ve 3D projeler üretmek için kullanılabilir. Burada Unity’i diğerlerinden ayıran bu 2D ve 3D modellerin sadece sürükleyip bırakılarak kullanılabilmesidir. Bu sayede oyun geliştirmenin önemli bir bölümünü oluşturan modelleme konusunda geliştiriciye büyük kolaylıklar sağlar.",
                "advantage": "<p><strong>Çok Platformlu Desteği:</strong> Unity, oyunlarınızı birçok farklı platformda (PC, mobil, web, VR, AR, konsol vs.) yayınlamanıza olanak tanır.</p>\n\n<p><strong>Topluluk Desteği:</strong> Unity, büyük ve aktif bir kullanıcı topluluğuna sahiptir. Forumlar, tartışma grupları ve kaynaklar aracılığıyla sorularınıza cevap bulabilir ve deneyimlerinizi paylaşabilirsiniz.</p>\n\n<p><strong>Kolay Öğrenme Eğrisi:</strong> Unity, yeni başlayanlar için oldukça erişilebilir ve öğrenmesi kolay bir arayüze sahiptir. Çeşitli öğretici kaynaklar ve belgeler mevcuttur.</p>\n\n<p><strong>Hazır Varlıklar ve Mağaza:</strong> Unity Asset Store, hazır varlıkları (3D modeller, ses efektleri, scriptler vb.) bulabileceğiniz bir platform sunar, bu da geliştirme sürecini hızlandırabilir.</p>\n\n<p><strong>Gelişmiş Grafik Özellikleri:</strong> Unity, yüksek kaliteli grafik efektleri, aydınlatma ve animasyon özellikleri gibi gelişmiş grafik özelliklerine sahiptir.</p>\n\n<p><strong>Scripting Desteği:</strong> C# ve UnityScript (JavaScript tabanlı) gibi popüler programlama dillerini destekler.</p>\n\n<p><strong>Performans:</strong> Native geliştirme kadar performanslı olmayabilir, özellikle çok karmaşık ve yüksek performans gerektiren uygulamalarda.</p>",
                "disadvantage": "<p><strong>Performans Sorunları:</strong> Büyük ve karmaşık projelerde performans sorunları ortaya çıkabilir. Bu durum, optimize edilmemiş oyunlarda özellikle mobil cihazlarda hissedilebilir.</p>\n\n<p><strong>Lisans Ücretleri:</strong> Unity'nin bazı özellikleri için ücretli lisanslama modeli bulunmaktadır. Büyük stüdyolar için bu maliyetler önemli olabilir.</p>\n\n<p><strong>Varsayılan Grafik Kalitesi:</strong> Unity'nin varsayılan grafik kalitesi, diğer oyun motorlarına kıyasla bazen daha düşük olabilir. Ancak, bu genellikle geliştiricinin elinde olan bir durumdur ve özelleştirilebilir.</p>\n\n<p><strong>Belirli Donanım ve Yazılım Gereksinimleri:</strong> Unity, belirli bir donanım ve yazılım konfigürasyonunu gerektirebilir, özellikle daha karmaşık projelerde.</p>\n\n<p><strong>Yenilikçi Özelliklerde Gecikmeler:</strong> Unity, bazı yenilikçi özellikleri diğer oyun motorlarına kıyasla daha geç entegre edebilir.</p>",
                "features": "<p><strong>Çok Platform Desteği:</strong> Unity, birçok platformu destekler. PC, mobil cihazlar, konsollar, web tarayıcıları, VR/AR cihazları gibi birçok farklı platformda oyunlar oluşturabilirsiniz. Bu, geliştiricilere esneklik sağlar.</p>\n\n<p><strong>Kodlama Dilleri:</strong> Unity, C# gibi modern ve popüler programlama dillerini kullanmanıza izin verir. C# dilinin güçlü ve geniş bir kullanıcı kitlesi bulunması, Unity ile çalışmayı daha çekici kılar.</p>\n\n<p><strong>Asset Store:</strong> Unity Asset Store, geliştiricilere hazır varlıkları (3D modeller, ses dosyaları, script'ler vb.) satın alma veya ücretsiz olarak indirme imkanı tanır. Bu, projelerinizde kullanabileceğiniz hazır kaynaklara erişimi kolaylaştırır.</p>\n\n<p><strong>Gelişmiş Fizik Motoru:</strong> Unity, güçlü bir fizik motoruna sahiptir. Bu, oyunlarda gerçekçi fizik tabanlı etkileşimler oluşturmanıza yardımcı olabilir.</p>",
                "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=unity",
                "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/unity.png",
                "projects": [
                    "Escape From Tarkov -> Online çok oyunculu bir hayatta kalma oyunudur. Oyuncular, haritada kaynak toplama ve diğer oyuncularla savaşma görevlerini üstlenirler.",
                    "RUST -> Açık dünya hayatta kalma oyunudur. Oyuncular, kaynakları toplar, inşaat yapar ve diğer oyuncularla etkileşime girerler.",
                    "Ori and the Blind Forest -> Platform türündeki bir video oyunudur. Grafikleri ve müziğiyle dikkat çeker ve bir karakterin macerasını anlatır.",
                    "Deus Ex: The Fall -> Birinci şahıs nişancı ve rol yapma oyunudur. Dünya çapında bir hükümet konspirasyonunu çözmeye çalışan bir karakteri takip eder.",
                    "Assassin’s Creed: Identity -> Ünlü Assassin's Creed serisinin bir parçasıdır. Oyuncular, tarihi yerlerde dolaşır ve gizli görevleri tamamlar.",
                    "Hearthstone: Heroes of Warcraft -> Blizzard'ın popüler kart oyunudur. Warcraft evreninden karakterler ve kartlar içerir.",
                    "Firewatch -> Birinci şahıs macera oyunudur. Orman görevini yerine getirirken karakterin hikayesini takip eder.",
                    "Hitman Go -> Bulmaca tabanlı bir strateji oyunudur. Oyuncular, düşmanları etkisiz hale getirme ve hedeflere ulaşma görevlerini çözmelidir.",
                    "Dead Trigger 2 -> Birinci şahıs nişancı türündeki bir oyun olan Dead Trigger 2, zombilerle savaşma konseptini içerir ve hayatta kalan bir dünyada geçer."
                ]
            },
            {
                "name": "Unreal Engine",
                "info": "Unreal Engine (UE) ile 2D veya 3D oyunlar geliştirebilirsiniz. Ayrıca bu oyun motoru, dilediğiniz gibi mobil, PC, PS gibi birçok platformda oyun geliştirmenize olanak tanımakta. Oyunlarınızı bir veya birden fazla platformda yayınlayabilir ve bu oyunlardan gelir elde edebilirsiniz.",
                "advantage": "<p><strong>Gelişmiş Grafikler ve Görseller:</strong> Unreal Engine, yüksek kaliteli grafikler, aydınlatma ve görsel efektlerle bilinir, bu da oyunlara gerçekçi bir görünüm kazandırabilir.</p>\n\n<p><strong>Gelişmiş Fizik Motoru:</strong> Unreal Engine, güçlü bir fizik motoruna sahiptir, bu da gerçekçi fizik tabanlı animasyonlar ve etkileşimler oluşturmayı mümkün kılar.</p>\n\n<p><strong>Çok Platformlu Desteği:</strong> Unreal Engine, oyunlarınızı farklı platformlarda (PC, konsol, mobil, VR) yayınlama konusunda esneklik sağlar.</p>\n\n<p><strong>Blueprint Sistemi:</strong> Kodlama bilgisi olmayan geliştiriciler için Blueprint sistemi, oyun mekaniği ve mantığını görsel bir şekilde oluşturmayı mümkün kılar.</p>\n\n<p><strong>Topluluk Desteği:</strong> Unreal Engine, büyük ve aktif bir topluluğa sahiptir. Forumlar, belgeler ve video öğreticiler aracılığıyla destek alabilirsiniz.</p>",
                "disadvantage": "<p><strong>Yüksek Sistem Gereksinimleri:</strong> Unreal Engine, gelişmiş grafik ve fizik özellikleri nedeniyle yüksek sistem gereksinimlerine ihtiyaç duyar.</p>\n\n<p><strong>Öğrenme Eğrisi:</strong> Unreal Engine, karmaşık bir araç setine sahiptir ve öğrenme eğrisi biraz daha dik olabilir, özellikle yeni başlayanlar için.</p>\n\n<p><strong>Proje Boyutları:</strong> Unreal Engine ile geliştirilen projelerin dosya boyutları bazen büyük olabilir, bu da indirme ve depolama sorunlarına neden olabilir.</p>\n\n<p><strong>Mobil Optimizasyon Zorlukları:</strong> Unreal Engine ile mobil oyun geliştirmek, özellikle performans optimizasyonu konusunda bazı zorlukları içerebilir.</p>\n\n<p><strong>Blueprint Karmaşıklığı:</strong> Blueprint sistemi karmaşık projelerde karışık hale gelebilir ve büyük ölçekli oyunlarda kod yazımı gerekebilir.</p>",
                "features": "<p><strong>Gelişmiş Grafik Yetenekleri:</strong> Unreal Engine, yüksek kaliteli ve gerçekçi grafikler sunan güçlü bir grafik motoruna sahiptir. Fizik tabanlı rendering, dinamik ışıklandırma, gölgelendirme, parçacık efektleri ve daha birçok gelişmiş grafik özelliği içerir.</p>\n\n<p><strong>Blueprint Visual Scripting:</strong> Unreal Engine, görsel bir programlama aracı olan Blueprint'i destekler. Bu, kod yazmadan oyun mantığı ve işlevselliği oluşturmayı kolaylaştırır. Hem yeni başlayanlar hem de deneyimli geliştiriciler için güçlü bir araçtır.</p>\n\n<p><strong>Fizik Simülasyonları ve Animasyonlar:</strong> Unreal Engine, gelişmiş fizik simülasyonları ve animasyon özellikleri sunar. Bu, oyun dünyasını daha gerçekçi ve etkileyici kılmak için kullanılabilir.</p>\n\n<p><strong>Çoklu Platform Desteği:</strong> Unreal Engine, birçok platformu destekler, bu da geliştiricilere oyunlarını farklı cihazlara taşıma esnekliği sağlar. PC, konsol, mobil cihazlar, VR/AR cihazları gibi birçok platformda çalışabilir.</p>\n\n<p><strong>C++ ve Blueprint Entegrasyonu:</strong> Unreal Engine, C++ programlama dilini kullanarak daha düşük seviyeli kodlamaları yapabilen geliştiricilere hitap eder. Aynı zamanda Blueprint'in gücünü kullanarak daha hızlı prototipleme ve geliştirme imkanı sağlar.</p>",
                "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=unreal+engine",
                "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/unrealengine.png",
                "projects": [
                    "Ark: Survival Evolved -> Hayatta kalma temalı bir açık dünya oyunudur. Oyuncular, dinozorlarla dolu gizemli bir adada hayatta kalmaya çalışır.",
                    "Conan Exiles -> Hayatta kalma ve inşa temalı bir açık dünya oyunudur. Oyuncular, barbarlarla dolu Conan evreninde hayatta kalmaya ve krallıklarını kurmaya çalışırlar.",
                    "Gears 5 -> Ünlü Gears of War serisinin bir parçasıdır. Üçüncü şahıs nişancı türünde bir oyun olan Gears 5, aksiyon dolu savaşları içerir.",
                    "Dragon Ball FighterZ -> Dragon Ball anime serisine dayanan bir dövüş oyunudur. Karakterler arasında büyüleyici dövüşler sunar.",
                    "Borderlands 3 -> Borderlands serisinin bir oyunu olarak, FPS ve açık dünya oyun türlerini birleştirir. Kahramanlar, silahlar ve çılgın düşmanlarla dolu bir dünyada macera yaşarlar.",
                    "Street Fighter 5 -> Borderlands serisinin bir oyunu olarak, FPS ve açık dünya oyun türlerini birleştirir. Kahramanlar, silahlar ve çılgın düşmanlarla dolu bir dünyada macera yaşarlar.",
                    "Hellblade: Senua’s Sacrifice -> Birinci şahıs perspektifinden oynanan bir aksiyon-gerilim oyunudur. Psikolojik öğeler içerir ve oyuncular, Senua'nın hikayesini keşfederler.",
                    "Fortnite -> Battle Royale oyunları arasında popüler olan bir çok oyunculu nişancı oyunudur. Oyuncular, hayatta kalmak için savaşır ve inşa ederler."
                ]
            },
            {
                "name": "Godot Engine",
                "info": "Godot Engine, MIT lisansı ile yayınlanan, platformlar arası geliştirme desteği sunan ücretsiz ve açık kaynak kodlu bir oyun motorudur. Arjantinli geliştiriciler Juan Linietsky ve Ariel Manzur tarafından Amerikalı birkaç şirket için özel olarak geliştirildi. Daha sonra ise ücretsiz olarak halka açıldı. Godot, 2D ve 3D oyunlar geliştirmek için tasarlanmıştır ve PC, mobil ve web platformlarının tamamı için kullanılabilir. Ayrıca Godot’un çok geniş bir işletim sistemi desteği de bulunmaktadır.",
                "advantage": "<p><strong>Ücretsiz ve Açık Kaynaklı:</strong> Godot Engine, ücretsiz ve açık kaynaklı bir oyun motorudur. Herkes tarafından ücretsiz olarak kullanılabilir ve projeler geliştirebilirsiniz.</p>\n\n<p><strong>Çapraz Platform Desteği:</strong> Godot, birden çok platformu destekler, bu da oyunlarınızı farklı cihazlarda (PC, mobil, web, konsol) çalıştırma esnekliği sağlar.</p>\n\n<p><strong>Düşük Sistem Gereksinimleri:</strong> Godot, düşük sistem gereksinimlerine sahiptir, bu da daha geniş bir kullanıcı kitlesi için erişilebilirliği artırır.</p>\n\n<p><strong>Dahili Düzenleyici ve Oyun Geliştirme Aracı:</strong> Godot, entegre bir düzenleyici ve oyun geliştirme aracına sahiptir. Bu, oyunları oluşturmak ve düzenlemek için ihtiyaç duyulan temel özellikleri tek bir yerde sunar.</p>\n\n<p><strong>Hızlı Prototipleme:</strong> Godot, hızlı prototipleme için uygun bir ortam sağlar. Oyun mekaniği ve özellikleri hızlı bir şekilde deneyebilirsiniz.</p>\n\n<p><strong>Dil Bağımsızlığı:</strong> Godot, GDScript adlı kendi script dilini kullanmanın yanı sıra C#, Python ve VisualScript gibi farklı programlama dillerini destekler.</p>",
                "disadvantage": "<p><strong>Topluluk Desteği:</strong> Godot'un topluluğu diğer büyük oyun motorlarına kıyasla daha küçüktür. Bu, sorulara cevap bulmak ve kaynaklara erişmek konusunda bazı zorluklar yaşatabilir.</p>\n\n<p><strong>Kütüphane ve Varlık Mağazası:</strong> Godot, diğer büyük oyun motorlarına göre daha küçük bir kütüphane ve varlık mağazasına sahiptir. Hazır varlıklara erişimde sınırlamalar olabilir.</p>\n\n<p><strong>Gelişmiş Grafik Özellikleri:</strong> Diğer bazı oyun motorlarına kıyasla Godot'un grafik özellikleri biraz daha sınırlı olabilir, özellikle AAA düzeyinde oyunlar için.</p>\n\n<p><strong>Büyük Oyun Projelerinde Performans:</strong> Godot, büyük ve karmaşık oyun projelerinde performans sorunları yaşayabilir. Özellikle yüksek grafik ve fizik ihtiyaçlarına sahip oyunlarda performans düşüklüğü görülebilir.</p>",
                "features": "<p><strong>Çoklu Platform Desteği:</strong> Godot, birçok platformu destekler, bu da oyun geliştiricilerine esneklik sağlar. PC, mobil cihazlar, konsollar ve web tarayıcıları gibi birçok platformda oyunlar oluşturabilirsiniz.</p>\n\n<p><strong>Çoklu Platform Desteği:</strong> Godot, birçok platformu destekler, bu da oyun geliştiricilerine esneklik sağlar. PC, mobil cihazlar, konsollar ve web tarayıcıları gibi birçok platformda oyunlar oluşturabilirsiniz.</p>\n\n<p><strong>Çoklu Dil Desteği:</strong> Godot, GDScript adı verilen kendi betik diline sahiptir, ancak Python benzeri bu dilin yanı sıra C# gibi popüler dilleri de destekler. Bu, geliştiricilere kendi tercih ettikleri dili kullanma özgürlüğü tanır.</p>\n\n<p><strong>Gelişmiş 2D ve 3D Yetenekler</strong> Godot, hem 2D hem de 3D oyun geliştirmek için kullanılabilir. 2D oyunlar için özel olarak tasarlanmış güçlü bir 2D motoru vardır.</p>",
                "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=godot+engine",
                "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/godot.png",
                "projects": [
                    "Carol Reed Mysteries -> Bir dizi macera oyununun adıdır. Oyuncular, gizemli olayları çözmek için ipuçlarını takip ederler.",
                    "City Game Studio -> Bir şehir yönetimi simülasyon oyunudur. Oyuncular, kendi oyun stüdyosunu yönetme görevini üstlenirler.",
                    "Cruelty Squad -> İlginç birinci şahıs nişancı oyunudur. Yaratıcı düşman tasarımları ve sıradışı atmosferi ile dikkat çeker.",
                    "Deponia -> Deponia adlı popüler bir grafik macera oyununun iOS ve PlayStation 4 için portlarıdır. Oyuncular, karakter Rufus'un maceralarını deneyimlerler.",
                    "The Interactive Adventures of Dog Mendonça & Pizzaboy -> Gizem ve komediyi bir araya getiren bir macera oyunudur. Gizemleri çözmek için karakterlerle etkileşime geçilir.",
                    "Kingdoms of the Dump -> Eşsiz bir indie oyun olan Kingdoms of the Dump, çöp dünyasında macera dolu bir keşif sunar.",
                    "Rogue State Revolution -> Politika ve devlet yönetimi temalı bir strateji oyunudur. Oyuncular, kendi ülkelerini yönetir ve politik kararlar alırlar.",
                    "Sonic Colors: Ultimate -> Ünlü Sonic the Hedgehog oyununun bir güncellenmiş versiyonudur. Hızlı tempolu aksiyon ve platform oyunları sunar.",
                    "Stereobreak -> Birinci şahıs perspektifinden oynanan bir aksiyon oyunudur. Oyuncular, hızlı tepkiler ve beceriler gerektiren çeşitli görevleri tamamlarlar.",
                    "Riven Tails Defense -> Bir kule savunma oyunudur. Oyuncular, düşman dalgalarını engellemek için stratejik olarak savunma kuleleri inşa ederler."
                ]
            }
        ],
        "salary": [
            {
                "personalSalaryCount": "116 kişinin paylaştığı maaş verilerine göre hesaplanmıştır."
            },
            {
                "price": "35.600₺",
                "type": "EN DÜŞÜK",
                "period": "(Aylık)"
            },
            {
                "price": "113.800₺",
                "type": "EN YÜKSEK",
                "period": "(Aylık)"
            },
            {
                "price": "44.600₺",
                "type": "Ortalama Maaş",
                "period": "(Aylık)"
            }
        ]
    },
    "ai": {
        "languages": [
            {
                "name": "Python",
                "info": "Yapay zeka ve makine öğrenimi uygulamaları için en yaygın kullanılan dil Python'dur. TensorFlow, PyTorch, scikit-learn, Keras gibi önemli kütüphaneler ve çerçeveler Python ile entegre bir şekilde çalışır.",
                "advantage": "<p><strong>Geniş Kütüphane Desteği:</strong> Python, zengin bir kütüphane ekosistemine sahiptir. TensorFlow, Keras, PyTorch, SciKit-Learn, NLTK, OpenCV gibi kütüphaneler sayesinde çeşitli yapay zeka görevleri için hazır çözümler bulunabilir.</p>\n\n<p><strong>Topluluk Desteği:</strong> Python, geniş bir geliştirici topluluğuna sahiptir. Bu, sorunlarla karşılaşıldığında veya yardıma ihtiyaç duyulduğunda daha kolay destek alınabileceği anlamına gelir.</p>\n\n<p><strong>Veri Bilimi Entegrasyonu:</strong> Python, veri bilimi ve yapay zeka alanları arasındaki entegrasyonu kolaylaştırır. Pandas, NumPy gibi kütüphaneler, veri manipülasyonu ve analizi için güçlü araçlar sunar.</p>\n\n<p><strong>Kolay Öğrenme Eğrisi:</strong> Python, açık ve anlaşılır bir sözdizimine sahiptir. Bu, yeni başlayanların dilin temellerini hızlı bir şekilde öğrenmelerini sağlar.</p>\n\n<p><strong>Çok Platform Desteği:</strong> Python, çeşitli işletim sistemlerinde çalışabilir. Bu, farklı platformlarda uygulamaların kolayca taşınabilir olmasını sağlar.</p>",
                "disadvantage": "<p><strong>Performans:</strong> Python, C veya C++ gibi dillere göre daha yavaşdır. Özellikle büyük veri setleri veya yoğun hesaplama gerektiren uygulamalarda performans sorunları ortaya çıkabilir.</p>\n\n<p><strong>Mobilitet Sorunları:</strong> Python uygulamalarının taşınabilirliği konusunda sorunlar yaşanabilir. Özellikle Python 2'den Python 3'e geçiş sürecinde bazı eski kütüphaneler ve kodlar uyumsuzluklarla karşılaşabilir.</p>\n\n<p><strong>Kısıtlı Mobil Desteği:</strong> Mobil uygulama geliştirmek isteyenler için Python'ın doğrudan destek sağlamayan bir dil olması bir dezavantajdır.</p>\n\n<p><strong>Güvenlik Konuları:</strong> Python, C ve C++ gibi dillere kıyasla daha yüksek seviyede bir dil olduğu için güvenlik konularında daha hassas olabilir. Ancak, bu daha çok uygulama koduna ve geliştirici uygulamalarına bağlıdır.</p>",
                "whyThisLanguage": "Python, yapay zeka (AI) ve makine öğrenimi (ML) gibi alanlarda popüler olan bir programlama dilidir. Python'un basit ve anlaşılır söz dizimi, veri manipülasyonu için zengin kütüphaneleri ve geniş topluluğu, AI projeleri için ideal bir seçim yapmasını sağlar. Ayrıca, TensorFlow, PyTorch gibi güçlü ve popüler AI kütüphaneleri Python dilini destekler, bu da geliştiricilere geniş bir araç seti sunar. Son olarak, Python'un çeşitli platformlarda desteklenmesi ve kolayca entegre edilebilmesi, AI projelerinin geliştirme sürecini hızlandırır ve yaygın olarak tercih edilmesini sağlar.",
                "possible_applications": "<p><strong>Python ile Görüntü Tanıma:</strong> Nesne tanıma, yüz tanıma ve görüntü sınıflandırma uygulamaları. Örneğin, TensorFlow ve Keras gibi kütüphanelerle evrişimli sinir ağları (CNN) kullanarak nesne tanıma modeli geliştirebilirsiniz.</p>\n\n<p><strong>Python ile Doğal Dil İşleme (NLP):</strong> Metin madenciliği, metin sınıflandırma, duygu analizi, dil çevirisi ve konuşma tanıma gibi NLP uygulamaları. SpaCy, NLTK, TextBlob ve Transformers gibi kütüphanelerle bu tür uygulamaları geliştirebilirsiniz.</p>\n\n<p><strong>Python ile Makine Öğrenimi ve Derin Öğrenme:</strong> Tahmin modelleri, sınıflandırma, regresyon ve derin öğrenme modelleri oluşturmak. TensorFlow, Keras, PyTorch gibi kütüphanelerle çeşitli öğrenme algoritmalarını uygulayabilirsiniz.</p>\n\n<p><strong>Python ile Haber Özetleme ve Metin Özetleme:</strong> Verileri analiz ederek makalelerin özetlerini çıkarmak. Gensim veya sumy gibi kütüphaneleri kullanarak metin özetleme uygulamaları geliştirebilirsiniz.</p>\n\n<p><strong>Python ile Chatbotlar:</strong> Doğal dil anlama ve cevap verme yetenekleri ile sohbet botları oluşturmak. Rasa, ChatterBot, veya Dialogflow gibi kütüphaneleri kullanarak chatbot geliştirebilirsiniz.</p>\n\n<p><strong>Python ile Oyunlardaki Yapay Zeka:</strong> Oyunlarda düşman davranışları, oyun stratejileri ve oyun içi kararlar üzerinde çalışan yapay zeka geliştirmek. Pygame, Unity veya Unreal Engine gibi oyun geliştirme çerçeveleri kullanabilirsiniz.</p>\n\n<p><strong>Python ile Finansal Tahmin ve Ticaret Stratejileri:</strong> Hisse senetleri, kripto paralar veya döviz ticaretinde kullanılacak finansal tahmin modelleri geliştirmek. Pandas, NumPy ve Scikit-Learn gibi kütüphaneleri kullanabilirsiniz.</p>\n\n<p><strong>Python ile Ses ve Konuşma İşleme:</strong> Sesli asistanlar, konuşma tanıma ve ses sentezi uygulamaları. SpeechRecognition, gTTS (Google Text-to-Speech), ve librosa gibi kütüphanelerle bu tür uygulamalar geliştirebilirsiniz.</p>\n\n<p><strong>Python ile Hasta Teşhisi ve Tıbbi Görüntü İşleme:</strong> Tıbbi görüntülerden bilgi çıkarmak ve hastalıkları teşhis etmek. TensorFlow, Keras ve OpenCV gibi kütüphaneleri kullanarak bu tür uygulamalar geliştirebilirsiniz.</p>\n\n<p><strong>Python ile Otonom Araçlar ve Robotik:</strong> Otonom araçlar veya robotlar için yapay zeka kontrollü navigasyon, çevresel algılama ve karar verme sistemleri oluşturmak. ROS (Robot Operating System) ve OpenCV gibi kütüphaneleri kullanabilirsiniz.</p>",
                "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=python+ile+yapay+zeka",
                "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/python.png"
            },
            {
                "name": "Java",
                "info": "Java, geniş bir endüstri tarafından kullanılan bir dil olup, büyük ölçekli uygulamalarda tercih edilebilir. Deeplearning4j gibi kütüphaneler, Java'yı yapay zeka uygulamaları için uygun hale getirir.",
                "advantage": "<p><strong>Platform Bağımsızlık:</strong> Java, write once, run anywhere prensibi üzerine kurulu olduğu için platform bağımsızdır. Bu, Java ile geliştirilen uygulamaların farklı işletim sistemlerinde çalışabilir olduğu anlamına gelir.</p>\n\n<p><strong>Geniş Kütüphane Desteği:</strong> Java, zengin bir kütüphane ekosistemine sahiptir. Bu, yapay zeka uygulamalarında kullanılabilecek çeşitli araçların ve çözümlerin bulunmasına olanak tanır.</p>\n\n<p><strong>Nesne Yönelimli Programlama (OOP):</strong> Java, nesne yönelimli programlamanın temel prensiplerine uygun bir dil olarak tasarlanmıştır. Bu, büyük ve karmaşık yapay zeka projelerini daha organize ve sürdürülebilir hale getirebilir.</p>\n\n<p><strong>Gelişmiş Güvenlik:</strong> Java, güvenlik konularına önem veren bir dil olarak bilinir. Güvenlik konusundaki önlemler, zararlı yazılımların engellenmesine yardımcı olabilir.</p>",
                "disadvantage": "<p><strong>Düşük Seviyeli Kontrol:</strong> Java, düşük seviyeli donanım kontrolleri konusunda C veya C++ gibi dillere göre daha sınırlıdır. Bu, özellikle performansı kritik olan uygulamalarda bir dezavantaj olabilir.</p>\n\n<p><strong>Bağlam Yönetimi:</strong> Bazı durumlarda, Java uygulamalarının düşük seviyeli bağlam yönetimi ve bellek kontrolü konusunda eleştirilere maruz kalabilir.</p>\n\n<p><strong>Performans:</strong> Java, doğrudan derlenen diller olan C veya C++ gibi dillere göre daha yavaş olabilir. Bu, özellikle yoğun hesaplama gerektiren yapay zeka uygulamalarında performans sorunlarına neden olabilir.</p>\n\n<p><strong>Yeni Trendlere Hızlı Uyum:</strong> Bazı durumlarda, Java'nın yeni ve hızla gelişen yapay zeka trendlerine hızlı bir şekilde uyum sağlaması zor olabilir. Özellikle popüler yapay zeka kütüphaneleri ve çözümleri başlangıçta diğer dillere daha hızlı entegre edilebilir.</p>",
                "whyThisLanguage": "Java, yapay zeka (AI) uygulamaları geliştirmek için tercih edilen bir programlama dilidir. Güçlü ve stabil bir yapıya sahip olması, büyük ölçekli AI projelerinde kullanımı için idealdir. Ayrıca, geniş bir kütüphane ve çerçeve ekosistemi sunar, bu da AI projelerini hızlı bir şekilde geliştirmeyi sağlar. Java'nın platform bağımsız olması ve geniş bir topluluğa sahip olması da tercih edilmesinde etkili olan faktörlerdir. Son olarak, Java'nın güvenlik odaklı yapısı, hassas verilerle çalışan AI projeleri için önemli bir avantajdır.",
                "possible_applications": "<p><strong>Java ile Chatbot Geliştirme:</strong> OpenNLP veya Apache OpenNLU gibi doğal dil işleme kütüphaneleri kullanarak Java ile sohbet botları oluşturabilirsiniz. Bu botlar, kullanıcılarla doğal dilde etkileşimde bulunabilir ve soruları yanıtlayabilir.</p>\n\n<p><strong>Java ile Veri Madenciliği ve Analizi:</strong> Weka gibi kütüphanelerle Java üzerinde veri madenciliği uygulamaları geliştirebilirsiniz. Veri madenciliği, büyük veri setlerinden bilgi çıkarma ve analiz yapma süreçlerini içerir.</p>\n\n<p><strong>Java ile Oyun Yapay Zekası:</strong> Java tabanlı oyunlarda yapay zeka kontrolü ekleyebilirsiniz. Örneğin, oyun karakterlerinin stratejilerini ve hareketlerini belirleyen bir yapay zeka geliştirebilirsiniz.</p>\n\n<p><strong>Java ile Makine Öğrenimi:</strong> Weka ve Apache OpenNLP gibi kütüphaneleri kullanarak Java ile sınıflandırma, regresyon veya kümeleme gibi makine öğrenimi uygulamaları geliştirebilirsiniz.</p>\n\n<p><strong>Java ile Görüntü İşleme:</strong> JavaCV veya BoofCV gibi kütüphaneleri kullanarak görüntü işleme uygulamaları geliştirebilirsiniz. Bu uygulamalar, nesne tanıma, yüz tanıma veya görüntü sınıflandırma gibi özellikler içerebilir.</p>\n\n<p><strong>Java ile Ses Tanıma:</strong> CMU Sphinx veya MaryTTS gibi Java tabanlı kütüphaneleri kullanarak ses tanıma ve metinden sese dönüştürme uygulamaları geliştirebilirsiniz.</p>\n\n<p><strong>Java ile Genetik Algoritmalar:</strong> JGAP gibi Java kütüphaneleri ile genetik algoritmalar ve evrimsel hesaplama uygulamaları geliştirebilirsiniz. Bu, optimizasyon veya problem çözme konularında kullanılabilir.</p>\n\n<p><strong>Java ile Hasta Teşhisi ve Sağlık Verileri Analizi:</strong> Java ile tıbbi görüntü işleme ve veri analizi uygulamaları geliştirebilirsiniz. Örneğin, radyolojik görüntülerden hastalıkları teşhis etmek için bir uygulama.</p>\n\n<p><strong>Java ile Robot Kontrolü ve Yapay Zeka:</strong> LeJOS gibi Java tabanlı kütüphaneleri kullanarak robot kontrolü ve yapay zeka uygulamaları geliştirebilirsiniz. Bu, robotların çevresel algılama ve hareket planlama yeteneklerini içerebilir.</p>\n\n<p><strong>Java ile İnternet of Things (IoT) ve Akıllı Ev Uygulamaları:</strong> Java ile IoT cihazlarını ve akıllı ev uygulamalarını kontrol etmek ve optimize etmek için yapay zeka kullanabilirsiniz. Örneğin, enerji verimliliği için akıllı bir termostat uygulaması.</p>",
                "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=java+ai",
                "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/java.png"
            },
            {
                "name": "C++",
                "info": "Hız ve performans gerektiren uygulamalarda C++ tercih edilebilir. TensorFlow ve OpenCV gibi kütüphaneler, C++ desteği sunar.",
                "advantage": "<p><strong>Yüksek Performans:</strong> C++, düşük seviyeli bir dil olduğu için doğrudan derlenmiş kodlar üretebilir ve yüksek performanslı uygulamalar geliştirmek için idealdir.</p>\n\n<p><strong>Düşük Seviyeli Kontrol:</strong> C++, donanım kaynaklarına doğrudan erişim sağlayarak düşük seviyeli kontrol imkanı sunar. Bu, özellikle performans kritik uygulamalarda avantaj sağlar.</p>\n\n<p><strong>Geniş Kütüphane Desteği:</strong> C++, geniş bir kütüphane ekosistemine sahiptir. Bu, yapay zeka uygulamaları için geliştirilmiş birçok kütüphanenin kullanılabilir olduğu anlamına gelir.</p>\n\n<p><strong>Nesne Yönelimli Programlama (OOP):</strong> C++, nesne yönelimli programlamaya olanak tanıyan bir dil olarak tasarlanmıştır. Bu, kodun düzenli ve sürdürülebilir olmasına yardımcı olabilir.</p>\n\n<p><strong>Mobil Uygulama Geliştirme:</strong> C++, mobil uygulama geliştirmek için kullanılabilir. Özellikle oyun geliştirme gibi grafik ağır uygulamalarda tercih edilir.</p>",
                "disadvantage": "<p><strong>Karmaşıklık:</strong> C++, öğrenilmesi ve kullanılması zor bir dil olabilir. Yüksek derecede kontrol sağlamak, aynı zamanda daha fazla karmaşıklık getirebilir.</p>\n\n<p><strong>Hafıza Yönetimi:</strong> C++, bellek yönetimini geliştiricinin sorumluluğuna bırakır. Bu, hatalı bellek kullanımına ve sızıntılara yol açabilir.</p>\n\n<p><strong>Hızlı Prototipleme Zorluğu:</strong> C++, hızlı prototipleme ve geliştirme sürecini diğer dillere göre daha zor hale getirebilir.</p>\n\n<p><strong>Taşınabilirlik Sorunları:</strong> C++, farklı platformlarda uygulamaların taşınabilirliği konusunda sorunlar yaşayabilir. C++ kodları genellikle platforma özgü olabilir.</p>\n\n<p><strong>Güvenlik Sorunları:</strong> Bellek yönetimi gibi konularda yapılan hatalar, güvenlik açıklarına neden olabilir. Hatalı kullanım durumlarında güvenlik sorunları ortaya çıkabilir.</p>",
                "whyThisLanguage": "C++, yapay zeka (AI) uygulamaları için performans odaklı bir programlama dilidir. Düşük seviyeli donanım kontrolü sağlayabilmesi ve hızlı çalışabilmesi, büyük veri setleri üzerinde etkili işlemler yapabilmesini sağlar. Ayrıca, C++'ın nesne yönelimli programlama özellikleri, karmaşık AI algoritmalarını daha düzenli ve anlaşılabilir bir şekilde uygulamayı sağlar. C++, donanım üzerinde doğrudan kontrol gerektiren AI projeleri için tercih edilen bir dildir.",
                "possible_applications": "<p><strong>C++ ile Görüntü İşleme:</strong> OpenCV gibi kütüphaneleri kullanarak nesne tanıma, yüz tanıma ve hareket algılama gibi görüntü işleme uygulamaları geliştirebilirsiniz.</p>\n\n<p><strong>C++ ile Oyun Yapay Zekası:</strong> Oyunlarda yapay zeka kontrolü ekleyebilirsiniz. Oyun karakterlerinin stratejilerini, düşman davranışlarını ve oyun içi kararları belirleyen bir yapay zeka geliştirebilirsiniz.</p>\n\n<p><strong>C++ ile Genetik Algoritmalar:</strong> Evrimsel hesaplama ve genetik algoritmaları uygulamak için C++ kullanabilirsiniz. Bu, optimizasyon ve problem çözme uygulamalarını içerebilir.</p>\n\n<p><strong>C++ ile Makine Öğrenimi:</strong> Dlib, mlpack veya Shark gibi C++ kütüphaneleri kullanarak sınıflandırma, regresyon ve kümeleme gibi makine öğrenimi uygulamaları geliştirebilirsiniz.</p>\n\n<p><strong>C++ ile Robot Kontrolü:</strong> Robotların hareket planlaması, çevresel algılama ve otomatik kontrolünü sağlamak için C++ kullanabilirsiniz. Özellikle robotik uygulamalar için hareket planlama algoritmaları geliştirebilirsiniz.</p>\n\n<p><strong>C++ ile Ses İşleme:</strong> Sesli komutları tanıma veya sesli cevaplar üretme gibi ses işleme uygulamalarını C++ ile geliştirebilirsiniz. Örneğin, Google Speech API veya CMU Sphinx kullanabilirsiniz.</p>\n\n<p><strong>C++ ile Yapay Zeka Tabanlı Strateji Oyunları:</strong> C++ kullanarak yapay zeka tabanlı strateji oyunları geliştirebilirsiniz. Bu tür oyunlarda yapay zeka, düşman stratejileri ve oyunun dinamiklerini yönetir.</p>\n\n<p><strong>C++ ile Bilgisayar Grafikleri ve Yapay Zeka Entegrasyonu:</strong> Bilgisayar grafikleri ve yapay zeka entegrasyonu için C++ kullanabilirsiniz. Örneğin, oyunlarda yapay zeka tabanlı karakterlerin grafiksel olarak etkileşimde bulunduğu uygulamalar.</p>\n\n<p><strong>C++ ile Veri Analizi:</strong> Büyük veri setleri üzerinde hızlı veri analizi ve işleme uygulamaları geliştirebilirsiniz. C++'ın performans avantajları, bu tür uygulamalarda önemlidir.</p>\n\n<p><strong>C++ ile Hasta Teşhisi ve Tıbbi Görüntü İşleme:</strong> C++ kullanarak tıbbi görüntülerden hastalıkları teşhis etmek için yapay zeka uygulamaları geliştirebilirsiniz. Örneğin, MRI veya CT taramalarındaki anormallikleri tespit eden bir uygulama.</p>\n\n<p><strong>Karmaşıklık:</strong> C++, öğrenilmesi ve kullanılması zor bir dil olabilir. Yüksek derecede kontrol sağlamak, aynı zamanda daha fazla karmaşıklık getirebilir.</p>\n\n<p><strong>Hafıza Yönetimi:</strong> C++, bellek yönetimini geliştiricinin sorumluluğuna bırakır. Bu, hatalı bellek kullanımına ve sızıntılara yol açabilir.</p>\n\n<p><strong>Hızlı Prototipleme Zorluğu:</strong> C++, hızlı prototipleme ve geliştirme sürecini diğer dillere göre daha zor hale getirebilir.</p>\n\n<p><strong>Taşınabilirlik Sorunları:</strong> C++, farklı platformlarda uygulamaların taşınabilirliği konusunda sorunlar yaşayabilir. C++ kodları genellikle platforma özgü olabilir.</p>\n\n<p><strong>Güvenlik Sorunları:</strong> Bellek yönetimi gibi konularda yapılan hatalar, güvenlik açıklarına neden olabilir. Hatalı kullanım durumlarında güvenlik sorunları ortaya çıkabilir.</p>",
                "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=c%2B%2B+yapay+zeka",
                "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/cplusplus.png"
            }
        ],
        "salary": [
            {
                "personalSalaryCount": "16 kişinin paylaştığı maaş verilerine göre hesaplanmıştır."
            },
            {
                "price": "47.400₺",
                "type": "EN DÜŞÜK",
                "period": "(Aylık)"
            },
            {
                "price": "112.500₺",
                "type": "EN YÜKSEK",
                "period": "(Aylık)"
            },
            {
                "price": "59.200₺",
                "type": "Ortalama Maaş",
                "period": "(Aylık)"
            }
        ]
    },
    "cyber_security": {

        "languages": [
            {
                "name": "Python",
                "info": "Python, siber güvenlik alanında oldukça popülerdir. Kolay okunabilir olması, geniş kütüphane desteği ve hızlı prototip geliştirme imkanı sunması nedeniyle tercih edilir. Ağ tarama, zafiyet analizi, saldırı simülasyonu gibi alanlarda sıklıkla kullanılır.",
                "advantage": "<p><strong>Kolay Okunabilirlik ve Öğrenme:</strong> Python'un basit ve temiz sözdizimi, yeni başlayanlar için kolayca öğrenilebilir ve anlaşılabilir olmasını sağlar.</p>\n\n<p><strong>Geniş Kütüphane Desteği:</strong> Python'un geniş kütüphane desteği, siber güvenlikte yaygın olarak kullanılan çeşitli araçların ve modüllerin bulunmasını sağlar. Bu, geliştiricilerin işlerini hızlı bir şekilde yapmalarına olanak tanır.</p>\n\n<p><strong>Çapraz Platform Desteği:</strong> Python, Windows, macOS ve Linux gibi çeşitli işletim sistemlerinde çalışabilir. Bu da uygulamaların farklı platformlarda kolayca kullanılabilir olmasını sağlar.</p>\n\n<p><strong>Hızlı Prototip Geliştirme:</strong> Python'un esnekliği ve kütüphane desteği, hızlı prototip geliştirme ve test etme süreçlerini kolaylaştırır.</p>",
                "disadvantage": "<p><strong>Performans:</strong> Diğer dillere göre Python'un performansı daha düşüktür. Özellikle, yoğun hesaplama gerektiren uygulamalarda performans sorunları yaşanabilir.</p>\n\n<p><strong>Derleme Sorunları:</strong> Python, derlenmiş bir dil değildir ve kod doğrudan makine koduna çevrilmez. Bu nedenle, bazı durumlarda derleme sorunları yaşanabilir.</p>\n\n<p><strong>Güvenlik Açıkları:</strong> Python'un geniş kütüphane desteği, bazı güvenlik açıklarının oluşmasına neden olabilir. Bu nedenle, güvenlik açıklarının düzeltilmesi ve güvenli kod yazımı konusunda dikkatli olunmalıdır.</p>\n\n<p><strong>Kaynak Kısıtlamaları:</strong> Python, bazı platformlarda kaynak tüketimi konusunda sınırlamaları olan bir dil olabilir. Özellikle, mobil cihazlar gibi kısıtlı kaynaklara sahip platformlarda performans sorunları yaşanabilir.</p>",
                "whyThisLanguage": "Python, siber güvenlik alanında yaygın olarak kullanılan bir programlama dilidir çünkü hızlı geliştirme süreci ve geniş kütüphane desteği sunar. Python'un basit ve anlaşılır söz dizimi, hızlı prototipler oluşturmayı ve güvenlik araçları geliştirmeyi kolaylaştırır. Ayrıca, çeşitli siber güvenlik alanları için özel kütüphaneleri bulunmaktadır. Bunlar arasında şifre kırma, ağ analizi, zafiyet taraması ve saldırı simülasyonu gibi konularda yardımcı olan kütüphaneler bulunmaktadır. Bu nedenlerle, Python siber güvenlik profesyonelleri arasında tercih edilen bir programlama dilidir.",
                "possible_applications": "<p><strong>Ağ Tarama ve Analiz:</strong> Python, nmap gibi araçların işlevselliğini genişletebilir ve ağ üzerindeki cihazları taramak, portları denetlemek gibi işlemler için kullanılabilir.</p>\n\n<p><strong>Zafiyet Taraması:</strong> Python ile zafiyet tarama araçları geliştirilebilir. Örneğin, web uygulamalarındaki zafiyetleri tespit etmek için kullanılan araçlar Python ile geliştirilebilir.</p>\n\n<p><strong>Güvenlik Araçları Geliştirme:</strong> Python ile şifre kırma araçları, brute force saldırı araçları gibi güvenlik araçları geliştirilebilir.</p>\n\n<p><strong>Log Analizi ve Siber Tehdit İzleme:</strong> Python ile sistem ve ağ günlüklerini analiz ederek olası tehditleri tespit etmek ve izlemek için araçlar geliştirilebilir.</p>\n\n<p><strong>Kriptografi:</strong> Python, kriptografi işlemleri için kullanılabilir. Şifreleme, anahtar yönetimi gibi işlemler için Python kütüphaneleri mevcuttur.</p>\n\n<p><strong>Güvenlik Otomasyonu:</strong> Python, güvenlik işlemlerini otomatikleştirmek için kullanılabilir. Güvenlik denetimleri, güvenlik yamalarının uygulanması gibi işlemler Python scriptleri ile otomatik hale getirilebilir.</p>\n\n<p><strong>Sosyal Mühendislik ve Fiziksel Güvenlik:</strong> Python, sosyal mühendislik saldırıları için kullanılabilir. Örneğin, phishing e-postaları otomatikleştirmek için Python kullanılabilir. Ayrıca, fiziksel güvenlik sistemlerini kontrol etmek için de Python kullanılabilir.</p>",
                "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=siber+g%C3%BCvenlik",
                "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/python.png"
            },
            {
                "name": "Java",
                "info": "Java, geniş bir kullanıcı tabanına sahip olduğu için güvenlik alanında da sıkça tercih edilir. Güvenlik uygulamaları, ağ güvenliği ve veri analizi gibi alanlarda kullanılabilir.",
                "advantage": "<p><strong>Güvenlik:</strong> Java, güvenli bir dil olarak bilinir. Bellek yönetimi, dizi sınırları kontrolü gibi güvenlik konularında otomatik olarak işlem yapar ve böylece güvenlik açıklarını azaltır.</p>\n\n<p><strong>Taşınabilirlik:</strong> Java, write once, run anywhere prensibiyle geliştirilmiştir, yani bir kez yazılan bir Java uygulaması farklı platformlarda çalışabilir. Bu da güvenlik açısından önemli bir avantajdır çünkü uygulamanın güvenlik yamaları ve güncellemeleri tek bir kod tabanında yönetilebilir.</p>\n\n<p><strong>Güçlü Kütüphane Desteği:</strong> Java, geniş bir standart kütüphane yelpazesine sahiptir ve siber güvenlik uygulamaları için birçok kullanışlı kütüphane bulunmaktadır. Bu kütüphaneler, güvenlik araştırmacıları ve geliştiriciler için önemli bir kaynaktır.</p>\n\n<p><strong>Gelişmiş Güvenlik Araçları:</strong> Java, güvenlik için birçok araç ve API sağlar. Örneğin, Java Cryptography Architecture (JCA) ve Java Secure Socket Extension (JSSE) gibi araçlar, kriptografi ve güvenli iletişim gereksinimlerini karşılamak için kullanılabilir.</p>",
                "disadvantage": "<p><strong>Performans:</strong> Java'nın çalışma zamanı (JVM), performans açısından bazı sınırlamalara sahiptir. Bu, özellikle yüksek performans gerektiren uygulamalarda dezavantaj olabilir.</p>\n\n<p><strong>Bellek Yönetimi:</strong> Java'nın otomatik bellek yönetimi özelliği genellikle bir avantaj olarak görülse de, bazı durumlarda hatalı kullanımı nedeniyle hafıza sızıntılarına neden olabilir.</p>\n\n<p><strong>Güncelleme Yönetimi:</strong> Java, sürekli olarak güncellenen bir dil ve çevresidir. Bu da güvenlik güncellemelerini izlemeyi ve uygulamalara entegre etmeyi gerektirir.</p>",
                "whyThisLanguage": "Java, siber güvenlik alanında kullanılan bir programlama dilidir çünkü platform bağımsızdır ve geniş bir kütüphane desteği sunar. Bu özellikler sayesinde, Java ile geliştirilen uygulamalar farklı platformlarda çalışabilir ve güvenlik için gerekli olan çeşitli araçlara erişebilir. Ayrıca, Java'nın güvenlik odaklı özellikleri, güvenlik açıklarını tespit etmek ve önlemek için etkili bir şekilde kullanılabilir. Bu nedenlerle, Java siber güvenlik profesyonelleri arasında tercih edilen bir programlama dilidir.",
                "possible_applications": "<p><strong>Ağ Güvenliği Araçları Geliştirme:</strong> Java, güvenlik duvarları, ağ tarayıcıları ve saldırı tespit sistemleri gibi ağ güvenliği araçları geliştirmek için kullanılabilir.</p>\n\n<p><strong>Kriptografi Uygulamaları:</strong> Java, kriptografi algoritmalarını uygulamak ve güvenli veri iletişimi sağlamak için kullanılabilir. SSL/TLS protokolleri gibi kriptografik protokoller Java ile uygulanabilir.</p>\n\n<p><strong>Güvenlik Duvarları:</strong> Java, güvenlik duvarları geliştirmek için kullanılabilir. Bu duvarlar, ağ trafiğini izleyebilir, filtreleyebilir ve zararlı trafiği engelleyebilir.</p>\n\n<p><strong>Güvenlik Kütüphaneleri Kullanımı:</strong> Java, güvenlik kütüphanelerini kullanarak kimlik doğrulama, veri şifreleme ve güvenli bağlantılar gibi güvenlik özelliklerini uygulamak için kullanılabilir.</p>\n\n<p><strong>Kötü Amaçlı Yazılım Analizi:</strong> Java, kötü amaçlı yazılım analizi için kullanılabilir. Kötü amaçlı yazılımları çalıştırmak ve analiz etmek için sanal makine yazılımları Java ile geliştirilebilir.</p>\n\n<p><strong>Güvenlik Uygulamaları Geliştirme:</strong> Java, güvenlik uygulamaları geliştirmek için kullanılabilir. Örneğin, güvenli mesajlaşma uygulamaları veya kimlik doğrulama araçları Java ile geliştirilebilir.</p>",
                "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=siber+g%C3%BCvenlik",
                "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/java.png"

            },
            {
                "name": "C/C++",
                "info": "C ve C++, güvenlik araçları ve sistem seviyesi yazılımların geliştirilmesinde kullanılır. Özellikle, hız ve bellek yönetimi avantajları nedeniyle güvenlik uygulamalarında tercih edilebilir.",
                "advantage": "<p><strong>Hız ve Verimlilik:</strong> C ve C++, doğrudan işletim sistemi ile etkileşim kurabilme yetenekleri sayesinde hızlı ve verimli kod oluşturmayı sağlar. Bu, güvenlik araştırmaları ve saldırı tespitleri gibi alanlarda önemli olabilir.</p>\n\n<p><strong>Düşük Seviyeli Erişim:</strong> Bu diller, bellek ve donanım üzerinde doğrudan kontrol sağlar. Bu, güvenlik açıklarını tespit etmek ve kapatmak için çok önemli olabilir.</p>\n\n<p><strong>Geniş Kullanım Alanı:</strong> C ve C++, güvenlik araştırmaları, kötü amaçlı yazılım analizi, güvenlik yazılımı geliştirme ve daha birçok alanda yaygın olarak kullanılmaktadır.</p>\n\n<p><strong>Kapsamlı Kütüphane Desteği:</strong> C ve C++, siber güvenlik uygulamaları için geniş kütüphane desteği sunar. Bu, güvenlik araştırmacılarının ve geliştiricilerin işlerini kolaylaştırabilir.</p>",
                "disadvantage": "<p><strong>Bellek Yönetimi Sorunları:</strong> C ve C++, doğrudan bellek yönetimi sağlar, ancak yanlış kullanıldığında bellek sızıntıları ve tampon taşmaları gibi güvenlik açıklarına neden olabilir.</p>\n\n<p><strong>Bilgi Güvenliği:</strong> Bu diller, doğrudan belleğe ve donanıma erişim sağladığı için, hatalı kod yazımı veya kötü amaçlı saldırılara karşı savunmasız olabilirler.</p>\n\n<p><strong>Taşınabilirlik Sorunları:</strong> C ve C++ kodu, platforma özgü olabilir. Bu da yazılımın taşınabilirliğini ve güvenliğini etkileyebilir.</p>",
                "whyThisLanguage": "C++, siber güvenlik alanında kullanılan bir programlama dilidir çünkü hızlı ve verimli çalışma yapısına sahiptir. Bu özellikleri sayesinde, düşük seviyeli işlemleri ve donanım üzerinde doğrudan kontrolü gerektiren siber güvenlik uygulamaları için idealdir. Ayrıca, C++'ın güçlü ve esnek yapısı, karmaşık şifreleme algoritmaları ve veri işleme işlemleri gibi siber güvenlik alanındaki zorlu problemleri çözmek için uygundur. Bu nedenlerle, C++ siber güvenlik profesyonelleri arasında tercih edilen bir programlama dilidir.",
                "possible_applications": "<p><strong>Ağ Güvenliği Araçları Geliştirme:</strong> C ve C++'ın hızlı ve düşük seviyeli doğası, ağ güvenliği araçları geliştirmek için idealdir. Örneğin, güvenlik duvarları, ağ tarayıcıları ve saldırı tespit sistemleri gibi araçlar C ve C++ ile geliştirilebilir.</p>\n\n<p><strong>Kriptografi Uygulamaları:</strong> C ve C++, kriptografi algoritmalarını uygulamak ve güvenli veri iletişimi sağlamak için kullanılabilir. Örneğin, SSL/TLS protokolleri gibi kriptografik protokoller C ve C++ ile uygulanabilir.</p>\n\n<p><strong>Kötü Amaçlı Yazılım Analizi:</strong> Kötü amaçlı yazılım analizi için, kötü amaçlı yazılımları çalıştırmak ve incelemek amacıyla güvenli bir ortam sağlayan sandboxing ve sanal makine yazılımları C ve C++ ile geliştirilebilir.</p>\n\n<p><strong>Güvenlik Açıkları Tespiti ve Kapatma:</strong> C ve C++, bellek yönetimi ve düşük seviyeli erişim yetenekleri sayesinde, yazılım ve sistemlerdeki güvenlik açıklarını tespit etmek ve kapatmak için kullanılabilir.</p>\n\n<p><strong>Güvenlik Uygulamaları Geliştirme:</strong> C ve C++, şifreleme, kimlik doğrulama, erişim kontrolü gibi güvenlik özelliklerini içeren uygulamalar geliştirmek için kullanılabilir. Örneğin, güvenli mesajlaşma uygulamaları veya kimlik doğrulama araçları C ve C++ ile geliştirilebilir.</p>",
                "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=siber+g%C3%BCvenlik",
                "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/c_cplusplus.png"

            },
            {
                "name": "JavaScript",
                "info": "Web uygulamalarının güvenliği için JavaScript sıkça kullanılır. Tarayıcı tabanlı saldırıları simüle etmek, XSS (Cross-Site Scripting) ve CSRF (Cross-Site Request Forgery) gibi saldırıları önlemek için kullanılır.",
                "advantage": "<p><strong>Tarayıcı Tabanlı Güvenlik Kontrolleri:</strong> JavaScript, web tarayıcılarında çalıştığı için, kullanıcıların tarayıcı tabanlı güvenlik kontrolleri yapmasına olanak tanır. Örneğin, XSS (Cross-Site Scripting) saldırılarına karşı koruma sağlayabilir.</p>\n\n<p><strong>Kullanıcı Etkileşimi ve Veri Doğrulama:</strong> JavaScript, web uygulamalarında kullanıcı etkileşimini artırabilir ve veri doğrulama işlemlerini gerçekleştirebilir. Bu, kullanıcı girişlerinin doğruluğunu kontrol etmek için önemlidir.</p>\n\n<p><strong>Hızlı Geliştirme ve İşlevsellik:</strong> JavaScript, web uygulamalarının hızlı bir şekilde geliştirilmesine olanak tanır. Çeşitli kütüphaneler ve çerçeveler, güvenlik işlevselliğini artırabilir ve hızlı geliştirme süreçlerine katkıda bulunabilir.</p>\n\n<p><strong>Çapraz Platform Desteği:</strong> JavaScript, çeşitli tarayıcılarda ve platformlarda çalışabilir. Bu, web uygulamalarının geniş bir kullanıcı kitlesine ulaşmasını sağlar.</p>",
                "disadvantage": "<p><strong>Kodun Açık Olması:</strong> JavaScript, tarayıcıda açık olarak çalıştığı için, kodun tamamıyla görünür olabilir. Bu, kötü niyetli kişilerin kodu inceleyerek zafiyetler bulmasına olanak tanır.</p>\n\n<p><strong>Güvenlik Zafiyetleri:</strong> JavaScript'in bazı özellikleri ve kütüphaneleri, güvenlik zafiyetlerine neden olabilir. Bu nedenle, güvenli kodlama prensiplerine uygun olarak yazmak önemlidir.</p>\n\n<p><strong>Yavaşlık ve Kaynak Tüketimi:</strong> JavaScript'in yoğun kullanımı, web sayfalarının yavaşlamasına ve kaynak tüketimine neden olabilir. Bu da performans ve güvenlik sorunlarına yol açabilir.</p>",
                "whyThisLanguage": "JavaScript, siber güvenlik alanında önemli bir rol oynar çünkü web uygulamalarının çoğu JavaScript tabanlıdır ve web uygulamaları siber saldırılara karşı en savunmasız alanlardan biridir. JavaScript, tarayıcılar aracılığıyla çalıştığı için kötü amaçlı yazılımların ve saldırıların hedefi olabilir. Ancak, JavaScript aynı zamanda güvenlik için de önemli araçlar sunar. Web uygulamalarında kullanılan güvenlik kontrollerini ve işlemlerini gerçekleştirmek için JavaScript tabanlı kütüphaneler ve çerçeveler bulunmaktadır. Bu nedenle, JavaScript siber güvenlik alanında hem potansiyel bir tehdit hem de güvenlik önlemleri için bir araç olarak önemli bir role sahiptir.",
                "possible_applications": "<p><strong>Kullanıcı Giriş Kontrolleri:</strong> JavaScript, web uygulamalarında kullanıcı girişlerini kontrol etmek için kullanılabilir. Örneğin, kullanıcı şifrelerinin karmaşıklığını kontrol edebilir veya kullanıcıların giriş yaptıkları alanlara geçerli veri girmelerini sağlayabilir.</p>\n\n<p><strong>Veri Doğrulama ve Filtrasyon:</strong> JavaScript, kullanıcı girişlerini veya diğer verileri doğrulamak ve filtrelemek için kullanılabilir. Bu, özellikle XSS (Cross-Site Scripting) saldırılarına karşı koruma sağlamak için önemlidir.</p>\n\n<p><strong>Şifreleme ve Güvenli İletişim:</strong> JavaScript, verilerin şifrelenmesi ve güvenli iletişim için kullanılabilir. Örneğin, HTTPS protokolü üzerinden güvenli iletişim kurmak için JavaScript kullanılabilir.</p>\n\n<p><strong>Güvenlik Testleri ve İzleme:</strong> JavaScript, güvenlik test araçları ve izleme araçları geliştirmek için kullanılabilir. Örneğin, web uygulamalarının güvenlik açıklarını taramak için JavaScript tabanlı araçlar geliştirilebilir.</p>\n\n<p><strong>Güvenlik Uyarıları ve Bildirimler:</strong> JavaScript, kullanıcılara güvenlik uyarıları ve bildirimleri göstermek için kullanılabilir. Örneğin, kullanıcıların güvenlik riskleri hakkında bilgilendirilmesi için JavaScript kullanılabilir.</p>\n\n<p><strong>Güvenlik Politikaları ve Denetimleri:</strong> JavaScript, web uygulamalarında güvenlik politikalarını ve denetimlerini uygulamak için kullanılabilir. Örneğin, tarayıcıların güvenlik politikalarını kontrol etmek için JavaScript kullanılabilir.</p>",
                "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=siber+g%C3%BCvenlik",
                "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/javascript.png"

            }


        ],
        "salary": [
            {
                "personalSalaryCount": "64 kişinin paylaştığı maaş verilerine göre hesaplanmıştır."
            },
            {
                "price": "38.700₺",
                "type": "EN DÜŞÜK",
                "period": "(Aylık)"
            },
            {
                "price": "112.500₺,",
                "type": "EN YÜKSEK",
                "period": "(Aylık)"
            },
            {
                "price": "48.400₺",
                "type": "Ortalama Maaş",
                "period": "(Aylık)"
            }
        ]
    },
    "data_science": {

        "languages": [
            {
                "name": "Python",
                "info": "Veri bilimi ve büyük veri analizi için en popüler dildir. Geniş kütüphane desteği (numpy, pandas, scikit-learn, TensorFlow, PyTorch vb.) sayesinde veri manipülasyonu, makine öğrenmesi, derin öğrenme ve veri görselleştirme gibi birçok alanda kullanılır.",
                "whyThisLanguage": "Python, veri bilimi alanında yaygın olarak kullanılan bir programlama dilidir çünkü basit ve anlaşılır bir söz dizimine sahiptir. Bu özellik, veri bilimcilerinin verileri hızlı bir şekilde analiz etmelerini ve model oluşturmalarını sağlar. Ayrıca, Python'un geniş bir veri bilimi kütüphanesi ekosistemi vardır. Pandas, NumPy, Matplotlib ve SciPy gibi kütüphaneler, veri işleme, analizi ve görselleştirmesi için güçlü araçlar sunar. Son olarak, Python'un açık kaynaklı olması ve geniş bir topluluğa sahip olması, veri bilimi projelerinin geliştirme sürecini kolaylaştırır ve Python'u veri bilimi için tercih edilen bir dil haline getirir.",
                "possible_applications": "<p><strong>Veri Manipülasyonu:</strong> Python, pandas kütüphanesi aracılığıyla veri manipülasyonu için geniş olanaklar sunar. Veri setlerini yüklemek, temizlemek, dönüştürmek ve analiz etmek için kullanılabilir.</p>\n\n<p><strong>Veri Görselleştirme:</strong> Python, matplotlib, seaborn ve plotly gibi kütüphaneler sayesinde verileri grafiklerle görselleştirmek için kullanılabilir. Bu, verilerin anlaşılabilirliğini artırabilir.</p>\n\n<p><strong>Makine Öğrenmesi:</strong> Python, scikit-learn, TensorFlow ve PyTorch gibi kütüphanelerle makine öğrenmesi modeli oluşturma ve eğitme süreçlerini kolaylaştırır. Sınıflandırma, regresyon, kümeleme ve derin öğrenme gibi birçok makine öğrenmesi algoritmasını destekler.</p>\n\n<p><strong>Büyük Veri İşleme:</strong> Python, büyük veri işleme için Apache Spark, Dask ve Vaex gibi kütüphanelerle birlikte kullanılabilir. Bu kütüphaneler, büyük veri setlerini işlemek ve paralel hesaplamalar yapmak için kullanılır.</p>\n\n<p><strong>Veri Tabanı Entegrasyonu:</strong> Python, veri tabanlarına erişmek ve verileri veri tabanlarıyla etkileşimli hale getirmek için kullanılabilir. SQLite, MySQL, PostgreSQL gibi veri tabanlarına erişim sağlayan kütüphaneler bulunmaktadır.</p>\n\n<p><strong>Veri Analizi ve Keşifsel Veri Madenciliği:</strong> Python, veri analizi ve keşifsel veri madenciliği için kullanılabilir. Bu, veri setlerindeki desenleri ve ilişkileri keşfetmek ve anlamak için kullanılır.</p>",
                "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=python+veri+bilimi",
                "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/python.png"
            },
            {
                "name": "R",
                "info": "İstatistiksel hesaplamalar ve veri analizi için özel olarak tasarlanmış bir dil olan R, özellikle akademik çevrelerde yaygın olarak kullanılır. Veri görselleştirme ve istatistiksel analiz için zengin bir kütüphane yelpazesine sahiptir.",
                "whyThisLanguage": "R, veri bilimi ve istatistik alanında yaygın olarak kullanılan bir programlama dilidir çünkü veri analizi, veri görselleştirme ve istatistiksel modelleme gibi konularda güçlü araçlar sunar. Özellikle akademik ve araştırma alanlarında sıkça kullanılan R, istatistiksel hesaplamalar için geniş bir kütüphane desteği sunar. Ayrıca, R'ın grafik çizim yetenekleri ve veri manipülasyon araçları da veri bilimcileri için önemli avantajlar sağlar. R, açık kaynaklı olması ve geniş bir topluluğa sahip olması nedeniyle veri bilimi alanında tercih edilen bir dil haline gelmiştir.",
                "possible_applications": "<p><strong>Veri Manipülasyonu:</strong> R, veri çerçeveleri ve vektörler gibi veri yapılarıyla çalışarak veri manipülasyonu için geniş olanaklar sunar. Veri setlerini yüklemek, temizlemek, dönüştürmek ve analiz etmek için kullanılabilir.</p>\n\n<p><strong>Veri Görselleştirme:</strong> R, ggplot2 gibi kütüphaneler aracılığıyla verileri grafiklerle görselleştirmek için kullanılabilir. Bu, verilerin anlaşılabilirliğini artırabilir.</p>\n\n<p><strong>İstatistiksel Analiz:</strong> R, temel istatistiksel analizlerden başlayarak karmaşık istatistiksel modellemelere kadar birçok analiz için kullanılabilir. Örneğin, regresyon analizi, ANOVA, zaman serisi analizi gibi analizler yapılabilir.</p>\n\n<p><strong>Makine Öğrenmesi:</strong> R, caret, randomForest ve nnet gibi kütüphanelerle makine öğrenmesi modeli oluşturma ve eğitme süreçlerini kolaylaştırır. Sınıflandırma, regresyon, kümeleme ve derin öğrenme gibi birçok makine öğrenmesi algoritmasını destekler.</p>\n\n<p><strong>Büyük Veri Analizi:</strong> R, büyük veri analizi için özel olarak tasarlanmış kütüphanelerle birlikte kullanılabilir. Örneğin, dplyr ve data.table gibi kütüphaneler, büyük veri setlerini işlemek için optimize edilmiştir.</p>\n\n<p><strong>Interaktif Raporlama:</strong> R Markdown ve Shiny gibi araçlarla interaktif raporlar ve web uygulamaları oluşturmak mümkündür. Bu, verileri daha etkili bir şekilde paylaşmayı sağlar.</p>",
                "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=R",
                "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/r.png"
            },
            {
                "name": "SQL",
                "info": "Veri tabanlarıyla çalışmak için kullanılan bir sorgulama dili olan SQL, büyük veri sistemlerinde veri sorgulama ve yönetme işlemlerinde yaygın olarak kullanılır.",
                "whyThisLanguage": "SQL, veri bilimi alanında önemli bir rol oynar çünkü veritabanlarıyla etkileşim kurmak için kullanılan standart bir dil olarak kabul edilir. SQL, veri tabanlarından veri çekmek, veri analizi yapmak, veri manipülasyonu yapmak ve veri işlemleri yapmak için kullanılır. Veri bilimcileri, SQL kullanarak büyük veri kümelerini sorgulayabilir, filtreleyebilir ve işleyebilirler. Ayrıca, SQL'in hızlı ve etkili veri işleme yetenekleri, veri bilimi projelerinde veri tabanı işlemlerini kolaylaştırır. Bu nedenle, SQL veri bilimi alanında önemli bir araçtır.",
                "possible_applications": "<p><strong>Veri Sorgulama:</strong> SQL, veritabanlarından veri sorgulamak için kullanılır. Veri analizi ve raporlama için veritabanı üzerindeki verileri sorgulamak için sıkça kullanılır.</p>\n\n<p><strong>Veri Birleştirme:</strong> SQL, farklı veri kaynaklarından veri alarak birleştirmek için kullanılabilir. Bu, büyük veri kümelerindeki verileri bir araya getirmek için önemli bir yetenektir.</p>\n\n<p><strong>Veri Temizleme ve Dönüştürme:</strong> SQL, verileri temizlemek ve istenilen formata dönüştürmek için kullanılabilir. Bu, veri analizi ve modelleme için veri hazırlığı aşamasında önemli bir adımdır.</p>\n\n<p><strong>Veri Analizi ve İstatistiksel İşlemler:</strong> SQL, veri tabanındaki veriler üzerinde analiz yapmak ve istatistiksel işlemler uygulamak için kullanılabilir. Bu, veri bilimi ve büyük veri analizi için önemli bir araçtır.</p>\n\n<p><strong>Veri Tabanı Yönetimi:</strong> SQL, veritabanı oluşturma, yönetme, yedekleme ve geri yükleme gibi veri tabanı yönetimi işlemleri için kullanılabilir. Bu, büyük veri kümelerini düzenli ve güvenli bir şekilde yönetmek için önemlidir.</p>",
                "videoLink": "https://www.udemy.com/courses/search/?src=ukw&q=sql+veri+bilimi",
                "imageUrl": "https://raw.githubusercontent.com/Cann2000/projectApi/main/pictures/sqlserver.png"
            }
        ],
        "salary": [
            {
                "personalSalaryCount": "198 kişinin paylaştığı maaş verilerine göre hesaplanmıştır."
            },
            {
                "price": "35.100₺",
                "type": "EN DÜŞÜK",
                "period": "(Aylık)"
            },
            {
                "price": "112.500₺",
                "type": "EN YÜKSEK",
                "period": "(Aylık)"
            },
            {
                "price": "43.900₺",
                "type": "Ortalama Maaş",
                "period": "(Aylık)"
            }
        ]
    }
}
